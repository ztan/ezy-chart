var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/components/ChartComponent.html",[0,0.764,1,1.169]],["body/components/ChartComponent.html",[0,0.77,1,1.048,2,0.676,3,0.395,4,0.614,5,0.614,6,0.321,7,0.489,8,1.051,9,2.815,10,0.614,11,1.051,12,1.051,13,1.629,14,0.85,15,1.023,16,1.096,17,0.351,18,1.051,19,1.051,20,1.377,21,1.297,22,1.377,23,1.937,24,2.249,25,1.588,26,2.049,27,1.096,28,1.657,29,2.049,30,0.955,31,1.996,32,1.377,33,1.051,34,1.402,35,0.489,36,1.051,37,1.629,38,2.883,39,0.805,40,0.836,41,0.085,42,1.297,43,0.614,44,0.805,45,1.831,46,2.509,47,0.614,48,0.614,49,0.614,50,1.831,51,0.489,52,1.511,53,1.831,54,1.831,55,1.051,56,0.614,57,0.614,58,1.457,59,0.614,60,0.614,61,0.614,62,0.614,63,2.686,64,0.614,65,1.831,66,0.676,67,0.85,68,2.348,69,1.225,70,1.041,71,2.133,72,1.629,73,1.096,74,0.489,75,0.489,76,1.614,77,0.489,78,0.614,79,0.614,80,0.614,81,0.489,82,1.629,83,0.614,84,1.051,85,0.614,86,1.096,87,0.614,88,1.297,89,0.614,90,0.614,91,0.489,92,0.614,93,0.614,94,0.614,95,0.489,96,0.614,97,0.614,98,0.614,99,0.614,100,0.489,101,2.049,102,0.614,103,0.614,104,0.489,105,0.614,106,0.489,107,0.614,108,0.489,109,1.096,110,0.614,111,0.614,112,0.614,113,0.614,114,0.614,115,0.489,116,0.614,117,0.489,118,0.614,119,0.614,120,0.614,121,0.614,122,0.614,123,0.614,124,0.614,125,1.629,126,0.614,127,1.377,128,0.614,129,0.614,130,0.614,131,0.614,132,0.614,133,2.348,134,0.614,135,0.614,136,1.041,137,0.614,138,1.377,139,0.614,140,0.321,141,0.805,142,0.805,143,0.489,144,0.614,145,0.489,146,0.614,147,0.489,148,0.836,149,0.836,150,1.051,151,0.614,152,0.614,153,0.614,154,1.803,155,2.564,156,0.805,157,1.051,158,1.096,159,1.803,160,1.377,161,1.629,162,1.376,163,1.803,164,0.805,165,0.805,166,1.376,167,1.803,168,0.805,169,2.134,170,1.048,171,1.376,172,0.805,173,0.805,174,0.805,175,0.805,176,0.805,177,2.509,178,0.805,179,0.805,180,0.805,181,1.376,182,0.805,183,0.805,184,0.805,185,1.376,186,0.805,187,0.805,188,2.134,189,1.376,190,0.805,191,0.805,192,0.805,193,0.805,194,0.805,195,0.614,196,1.051,197,2.614,198,0.805,199,0.805,200,0.805,201,0.805,202,0.805,203,1.376,204,0.676,205,0.805,206,0.805,207,0.805,208,0.805,209,0.805,210,0.805,211,1.051,212,0.805,213,1.376,214,1.376,215,0.805,216,0.614,217,0.805,218,1.376,219,1.376,220,1.376,221,0.805,222,0.805,223,0.805,224,1.803,225,0.805,226,0.805,227,1.803,228,0.805,229,1.803,230,0.395,231,0.805,232,0.805,233,0.614,234,0.805,235,0.805,236,0.805,237,0.614,238,0.614,239,0.805,240,0.321,241,2.434,242,0.805,243,1.803,244,0.805,245,0.614,246,0.614,247,0.614,248,0.614,249,0.614,250,1.051,251,0.614,252,1.831,253,1.376,254,0.614,255,2.398,256,2.509,257,0.614,258,0.805,259,1.629,260,0.805,261,0.805,262,3.45,263,0.805,264,0.805,265,1.376,266,0.805,267,0.805,268,0.805,269,0.805,270,0.805,271,0.805,272,0.805,273,1.376,274,0.489,275,0.805,276,0.805,277,0.805,278,0.614,279,2.134,280,0.805,281,1.376,282,1.051,283,0.805,284,0.805,285,0.805,286,0.805,287,0.805,288,0.805,289,0.805,290,0.805,291,0.805,292,0.805,293,0.614,294,0.805,295,0.805,296,0.805,297,0.805,298,0.805,299,0.805,300,0.805,301,0.805,302,0.395,303,0.805,304,0.805,305,0.805,306,1.051,307,0.805,308,0.805,309,1.051,310,0.805,311,0.805,312,0.805,313,0.805,314,1.377,315,1.376,316,0.805,317,2.134,318,2.134,319,0.805,320,0.805,321,2.614,322,1.376,323,2.945,324,1.803,325,1.376,326,0.805,327,0.805,328,0.805,329,0.805,330,0.805,331,0.805,332,0.805,333,0.805,334,0.614,335,0.395,336,0.805,337,1.051,338,0.836,339,0.805,340,0.805,341,1.376,342,0.614,343,0.805,344,0.805,345,0.805,346,1.376,347,2.134,348,2.134,349,2.134,350,1.803,351,1.629,352,1.376,353,1.803,354,0.805,355,0.805,356,0.805,357,1.376,358,0.805,359,0.805,360,0.805,361,1.376,362,1.803,363,1.376,364,1.376,365,1.376,366,1.376,367,1.051,368,1.051,369,1.376,370,0.805,371,0.805,372,0.805,373,0.805,374,0.614,375,0.614,376,0.614,377,0.805,378,1.376,379,1.376,380,0.805,381,1.376,382,1.376,383,0.805,384,0.805,385,0.805,386,0.805,387,1.376,388,1.803,389,0.614,390,0.614,391,1.376,392,0.805,393,1.051,394,1.051,395,1.376,396,0.805,397,0.805,398,1.051,399,0.805,400,0.805,401,0.805,402,0.805,403,0.805,404,2.134,405,0.805,406,0.805,407,0.805,408,0.805,409,0.805,410,0.805,411,1.051,412,1.051,413,1.051,414,1.629,415,0.614,416,0.614,417,0.395,418,0.321,419,0.614,420,0.025,421,0.025]],["title/modules/ChartsModule.html",[422,0.606,423,1.169]],["body/modules/ChartsModule.html",[1,2.126,2,1.472,3,1.472,6,1.193,14,1.193,15,0.962,30,1.464,35,1.82,41,0.084,58,1.82,136,1.724,140,1.193,143,1.82,145,1.82,155,1.82,204,2.089,230,1.472,240,1.193,302,1.472,417,2.126,420,0.067,421,0.067,422,0.763,423,1.805,424,2.287,425,3.674,426,2.805,427,3.034,428,2.996,429,3.674,430,2.996,431,2.996,432,2.996,433,2.287,434,2.287,435,2.996,436,3.674,437,2.996]],["title/components/EChartComponent.html",[0,0.764,417,1.169]],["body/components/EChartComponent.html",[0,0.851,1,0.471,2,0.783,3,0.471,4,0.731,5,0.731,6,0.382,8,1.217,9,2.942,10,0.731,11,1.217,12,1.217,13,1.823,14,1.356,15,0.851,16,1.244,17,0.244,18,1.217,19,1.217,20,1.563,21,0.969,23,2.314,24,1.217,25,1.244,26,1.931,27,1.244,28,1.406,29,1.931,30,1.056,31,1.563,32,1.563,33,1.563,34,1.475,35,0.582,36,1.217,37,1.823,38,2.973,40,0.969,41,0.085,42,1.739,43,0.731,45,2.024,46,2.598,47,0.731,48,0.731,49,0.731,50,2.024,51,0.582,52,1.621,53,1.563,54,2.024,55,1.217,56,0.731,57,0.731,58,0.969,59,0.731,60,0.731,61,0.731,62,0.731,63,2.827,64,0.731,65,2.024,66,0.783,67,1.266,68,2.519,69,1.209,70,1.14,71,2.024,72,1.563,73,1.451,74,0.582,75,0.582,76,1.755,77,0.582,78,0.731,79,0.731,80,0.731,81,0.582,82,1.563,83,0.731,84,1.823,85,0.731,86,1.931,87,0.731,88,0.582,89,0.731,90,0.731,91,0.582,92,0.731,93,0.731,94,0.731,95,0.582,96,0.731,97,0.731,98,0.731,99,0.731,100,1.451,101,2.005,102,0.731,103,0.731,104,0.582,105,0.731,106,0.582,107,0.731,108,0.582,109,0.969,110,0.731,111,0.731,112,0.731,113,0.731,114,0.731,115,0.582,116,0.731,117,0.582,118,1.563,119,0.731,120,0.731,121,0.731,122,0.731,123,0.731,124,0.731,125,0.731,126,0.731,127,1.217,128,0.731,129,0.731,130,0.731,131,0.731,132,0.731,133,2.598,134,0.731,135,0.731,136,1.14,137,0.731,138,1.563,139,0.731,140,0.382,143,0.582,144,0.731,145,0.582,146,0.731,147,0.582,148,0.969,149,0.969,151,0.731,152,0.731,153,0.731,155,2.366,160,0.731,161,1.563,170,1.006,177,1.217,204,0.471,216,2.185,240,0.382,241,2.598,245,0.731,246,0.731,247,0.731,248,0.731,249,0.731,250,1.217,251,0.731,252,1.563,254,0.731,256,1.823,257,1.217,259,1.217,274,0.582,278,0.731,282,0.731,293,0.731,302,0.471,306,2.185,309,1.823,314,1.563,334,0.731,335,0.471,337,0.731,338,0.969,351,1.563,367,0.731,368,0.731,374,0.731,375,2.667,389,2.185,390,1.217,393,0.731,394,0.731,398,0.731,411,1.217,412,1.217,413,1.217,414,1.823,415,0.731,416,0.731,417,1.173,418,1.314,419,0.731,420,0.029,421,0.029,438,2.862,439,0.958,440,1.594,441,1.594,442,2.048,443,2.048,444,2.048,445,3.572,446,2.048,447,3.299,448,2.048,449,2.048,450,2.048,451,1.563,452,2.048,453,2.862,454,2.048,455,2.862,456,0.958,457,0.958,458,0.958,459,0.958,460,0.958,461,0.958,462,0.958,463,0.958,464,1.594,465,0.958,466,1.594,467,0.958,468,0.958,469,0.958,470,0.958,471,0.958,472,0.958,473,0.958,474,0.958,475,0.958,476,0.958,477,0.958,478,1.594,479,2.048,480,0.958,481,0.958,482,0.958,483,0.958,484,0.958,485,0.958,486,2.862,487,0.958,488,0.958,489,0.958,490,0.958,491,1.594,492,0.958,493,0.958,494,1.594,495,0.958,496,0.958,497,1.594,498,2.048,499,0.958,500,2.048,501,0.958,502,0.958,503,0.958,504,0.958,505,0.958,506,0.958,507,0.958,508,0.958,509,1.594,510,1.594,511,1.594,512,1.594,513,1.594,514,2.048,515,0.958,516,0.958,517,2.048,518,0.958,519,0.958,520,0.958,521,0.958,522,0.958,523,0.958,524,0.958,525,0.958,526,0.958,527,0.958,528,0.958,529,0.958,530,0.958,531,0.958,532,0.958,533,2.048,534,3.034,535,2.387,536,1.594,537,0.958,538,1.594,539,1.594,540,0.958,541,0.958,542,0.958,543,0.958,544,0.958,545,0.958,546,0.958,547,0.958,548,0.958,549,0.958,550,0.958,551,0.958,552,2.651,553,2.862,554,1.594,555,0.958,556,0.958,557,1.594,558,0.958,559,0.958,560,0.958,561,2.048,562,0.958,563,0.958,564,0.958,565,0.958,566,1.594,567,2.048,568,1.594,569,0.958,570,0.958,571,0.958,572,0.958,573,1.594,574,0.958,575,0.958,576,2.862,577,0.958,578,0.958,579,0.958,580,0.958,581,0.958,582,0.958,583,0.958,584,0.958,585,0.958,586,2.387,587,0.958,588,0.958,589,0.958,590,0.958]],["title/changelog.html",[591,1.231,592,0.995,593,2.026]],["body/changelog.html",[2,1.037,6,0.841,15,1.339,17,0.538,21,1.283,22,1.612,23,1.776,25,1.283,26,1.283,27,1.283,28,1.778,29,2.309,30,0.841,34,1.165,41,0.061,66,1.037,67,0.841,69,1.336,70,0.841,73,1.776,75,1.283,76,1.037,81,1.776,86,2.038,91,1.283,100,1.283,104,1.283,106,1.283,108,1.283,115,1.283,136,1.165,157,1.612,211,1.612,230,1.647,233,1.612,237,1.612,238,1.612,274,1.283,376,1.612,418,0.841,420,0.053,421,0.053,422,0.538,594,4.031,595,2.111,596,2.111,597,2.111,598,1.283,599,2.111,600,2.111,601,2.232,602,2.924,603,2.111,604,2.111,605,4.334,606,2.56,607,2.111,608,4.266,609,2.111,610,2.111,611,2.111,612,2.924,613,2.111,614,2.111,615,2.111,616,2.111,617,2.111,618,2.111,619,4.171,620,4.171,621,2.111,622,2.111,623,2.111,624,2.111,625,2.111,626,2.111,627,1.612,628,3.62,629,2.111,630,2.111,631,2.111,632,3.354,633,2.111,634,2.924,635,2.111,636,2.111,637,2.111,638,3.354,639,2.924,640,2.56,641,2.111,642,2.111,643,2.111,644,2.232,645,2.111,646,2.924,647,2.924,648,2.232,649,1.612,650,2.111,651,2.111,652,2.111,653,2.111,654,2.111,655,2.924,656,2.111,657,2.111,658,2.111,659,2.111,660,2.111,661,2.111,662,2.924,663,2.111,664,2.111,665,2.924,666,3.354,667,2.111,668,2.111,669,2.111,670,3.62,671,2.111,672,2.924,673,2.111,674,2.111,675,2.924,676,2.111,677,2.111,678,2.111,679,2.111,680,2.111,681,2.111,682,2.111,683,2.111,684,2.111,685,2.111,686,2.111,687,2.111,688,2.111,689,2.111,690,2.924,691,1.612,692,2.111,693,2.111,694,2.111,695,2.111,696,2.111,697,2.763,698,2.111,699,2.111,700,2.111,701,2.111,702,2.924,703,2.111,704,2.111,705,2.111,706,2.111,707,2.111,708,2.111,709,2.111,710,2.111,711,2.111,712,2.111,713,2.111,714,3.354,715,2.924,716,2.111,717,2.924,718,2.111,719,2.111,720,2.111,721,2.111,722,2.111,723,2.111,724,2.111,725,2.111,726,2.111,727,2.111,728,2.111,729,2.111,730,2.111,731,2.111,732,2.111,733,2.111,734,2.111,735,2.111,736,2.111]],["title/dependencies.html",[737,2.026,738,1.726]],["body/dependencies.html",[41,0.082,140,1.378,147,2.102,148,2.102,418,1.378,420,0.073,421,0.073,738,2.102,739,3.46,740,3.46,741,2.642,742,3.46,743,3.46,744,3.46,745,3.46]],["title/miscellaneous/functions.html",[158,1.726,746,0.65]],["body/miscellaneous/functions.html",[7,2.112,17,0.885,30,1.385,40,2.112,41,0.077,42,2.112,158,2.112,195,2.654,196,3.065,420,0.073,421,0.073,451,2.654,746,1.116,747,4.015,748,2.654]],["title/index.html",[17,0.516,591,1.231,592,0.995]],["body/index.html",[0,1.306,3,1.645,14,1.334,15,1.075,16,1.571,28,1.271,41,0.083,51,2.035,52,1.271,66,1.271,67,1.03,69,1.334,70,1.334,77,1.571,88,1.571,95,1.571,136,1.565,140,1.334,170,1.271,204,1.825,240,1.334,335,1.271,418,1.03,420,0.061,421,0.061,422,0.946,423,1.645,426,2.557,592,1.645,598,2.257,601,1.974,606,1.974,627,1.974,640,2.557,644,1.974,648,2.557,649,2.557,738,1.571,741,2.557,749,3.349,750,2.586,751,2.586,752,4.169,753,3.929,754,2.035,755,2.586,756,3.349,757,2.586,758,2.586,759,1.974,760,2.586,761,2.586,762,2.586,763,2.586,764,2.586,765,3.349,766,2.586,767,3.349,768,1.974,769,2.586,770,2.586,771,2.586,772,2.586,773,2.586,774,2.586,775,2.586,776,2.586,777,2.586,778,2.586,779,4.07,780,2.586,781,2.586,782,2.586,783,2.586,784,2.586,785,3.349,786,4.169,787,2.586,788,2.586,789,2.586,790,4.07,791,3.349,792,2.586,793,2.586,794,3.349,795,2.586,796,2.586,797,2.586,798,2.586,799,2.586,800,2.586,801,1.974]],["title/license.html",[591,1.231,592,0.995,754,1.231]],["body/license.html",[6,1.17,41,0.066,70,1.446,117,1.784,338,1.784,420,0.066,421,0.066,598,1.784,691,2.242,697,2.242,754,1.784,759,3.008,768,3.008,801,2.771,802,3.94,803,2.937,804,2.937,805,2.937,806,3.63,807,2.937,808,2.937,809,2.937,810,2.937,811,3.63,812,2.937,813,4.115,814,4.446,815,2.937,816,3.63,817,2.937,818,3.63,819,2.937,820,2.937,821,2.937,822,2.937,823,2.937,824,2.937,825,2.937,826,2.937,827,2.937,828,2.937,829,2.937,830,2.937,831,2.937,832,3.63,833,3.63,834,2.937,835,2.937,836,3.63,837,2.937,838,2.937,839,2.937,840,2.937,841,2.937,842,2.937,843,2.937,844,2.937,845,2.937,846,2.937,847,2.937,848,2.937,849,2.937,850,2.937,851,2.937,852,2.937,853,2.937,854,2.937,855,2.937,856,2.937,857,2.937,858,2.937]],["title/modules.html",[422,0.808]],["body/modules.html",[41,0.074,420,0.074,421,0.074,422,0.911,423,1.757,859,3.576]],["title/overview.html",[860,2.421]],["body/overview.html",[0,1.137,41,0.074,170,1.994,240,1.411,335,1.74,420,0.074,421,0.074,422,0.902,860,2.704]],["title/miscellaneous/typealiases.html",[746,0.65,861,2.84]],["body/miscellaneous/typealiases.html",[17,0.85,34,1.329,41,0.082,52,1.639,67,1.329,69,1.561,74,2.027,101,2.382,109,2.027,149,2.529,150,3.178,342,2.547,420,0.071,421,0.071,746,1.071,862,3.336,863,4.163,864,4.163,865,3.336]],["title/miscellaneous/variables.html",[746,0.65,866,2.169]],["body/miscellaneous/variables.html",[7,2.046,14,1.341,15,1.383,17,0.857,34,1.57,41,0.081,76,1.654,230,1.936,302,1.654,420,0.072,421,0.072,424,2.57,427,3.19,433,3.19,434,2.57,746,1.081,748,2.57,866,2.57,867,3.367]]],"invertedIndex":[["",{"_index":41,"title":{},"body":{"components/ChartComponent.html":{},"modules/ChartsModule.html":{},"components/EChartComponent.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":177,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["0.0.1",{"_index":736,"title":{},"body":{"changelog.html":{}}}],["0.0.2",{"_index":728,"title":{},"body":{"changelog.html":{}}}],["0.0.3",{"_index":713,"title":{},"body":{"changelog.html":{}}}],["0.0.4",{"_index":696,"title":{},"body":{"changelog.html":{}}}],["0.0.5",{"_index":688,"title":{},"body":{"changelog.html":{}}}],["0.0.6",{"_index":682,"title":{},"body":{"changelog.html":{}}}],["0.0.7",{"_index":677,"title":{},"body":{"changelog.html":{}}}],["0.0.8",{"_index":674,"title":{},"body":{"changelog.html":{}}}],["0.0.9",{"_index":669,"title":{},"body":{"changelog.html":{}}}],["0.1.0",{"_index":664,"title":{},"body":{"changelog.html":{}}}],["0.1.1",{"_index":654,"title":{},"body":{"changelog.html":{}}}],["0.1.2",{"_index":645,"title":{},"body":{"changelog.html":{}}}],["0.1.x",{"_index":643,"title":{},"body":{"changelog.html":{}}}],["0.2.0",{"_index":637,"title":{},"body":{"changelog.html":{}}}],["0.2.1",{"_index":631,"title":{},"body":{"changelog.html":{}}}],["0.2.2",{"_index":625,"title":{},"body":{"changelog.html":{}}}],["0.2.3",{"_index":616,"title":{},"body":{"changelog.html":{}}}],["0.3.0",{"_index":604,"title":{},"body":{"changelog.html":{}}}],["01",{"_index":689,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":670,"title":{},"body":{"changelog.html":{}}}],["034b5a3",{"_index":673,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":655,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":698,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":632,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":626,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":617,"title":{},"body":{"changelog.html":{}}}],["096295b",{"_index":681,"title":{},"body":{"changelog.html":{}}}],["0].data",{"_index":175,"title":{},"body":{"components/ChartComponent.html":{}}}],["0].label",{"_index":172,"title":{},"body":{"components/ChartComponent.html":{}}}],["1",{"_index":170,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{},"index.html":{},"overview.html":{}}}],["1.0",{"_index":798,"title":{},"body":{"index.html":{}}}],["100",{"_index":192,"title":{},"body":{"components/ChartComponent.html":{}}}],["10px",{"_index":447,"title":{},"body":{"components/EChartComponent.html":{}}}],["11",{"_index":714,"title":{},"body":{"changelog.html":{}}}],["12",{"_index":606,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["120x120",{"_index":709,"title":{},"body":{"changelog.html":{}}}],["12765f1",{"_index":731,"title":{},"body":{"changelog.html":{}}}],["13",{"_index":607,"title":{},"body":{"changelog.html":{}}}],["13a2fc5",{"_index":706,"title":{},"body":{"changelog.html":{}}}],["13px",{"_index":453,"title":{},"body":{"components/EChartComponent.html":{}}}],["144122c",{"_index":693,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":665,"title":{},"body":{"changelog.html":{}}}],["150",{"_index":315,"title":{},"body":{"components/ChartComponent.html":{}}}],["16",{"_index":656,"title":{},"body":{"changelog.html":{}}}],["19",{"_index":627,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["1e1f684",{"_index":732,"title":{},"body":{"changelog.html":{}}}],["1px",{"_index":448,"title":{},"body":{"components/EChartComponent.html":{}}}],["2",{"_index":335,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{},"index.html":{},"overview.html":{}}}],["2.18.0",{"_index":745,"title":{},"body":{"dependencies.html":{}}}],["2.7.1",{"_index":742,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":675,"title":{},"body":{"changelog.html":{}}}],["2017",{"_index":697,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["2018",{"_index":605,"title":{},"body":{"changelog.html":{}}}],["21",{"_index":671,"title":{},"body":{"changelog.html":{}}}],["22",{"_index":638,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":618,"title":{},"body":{"changelog.html":{}}}],["240",{"_index":474,"title":{},"body":{"components/EChartComponent.html":{}}}],["26",{"_index":633,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":715,"title":{},"body":{"changelog.html":{}}}],["2d7cd01",{"_index":694,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":765,"title":{},"body":{"index.html":{}}}],["3195ac5",{"_index":735,"title":{},"body":{"changelog.html":{}}}],["33daa46",{"_index":701,"title":{},"body":{"changelog.html":{}}}],["389b678",{"_index":687,"title":{},"body":{"changelog.html":{}}}],["3be30b6",{"_index":624,"title":{},"body":{"changelog.html":{}}}],["4.0.0",{"_index":743,"title":{},"body":{"dependencies.html":{}}}],["4.17.4",{"_index":744,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":537,"title":{},"body":{"components/EChartComponent.html":{}}}],["4217",{"_index":80,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["4ead39d",{"_index":684,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":644,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["5c519cc",{"_index":695,"title":{},"body":{"changelog.html":{}}}],["6",{"_index":641,"title":{},"body":{"changelog.html":{}}}],["6.0.0",{"_index":740,"title":{},"body":{"dependencies.html":{}}}],["6d64f8c",{"_index":615,"title":{},"body":{"changelog.html":{}}}],["6ed3c5d",{"_index":663,"title":{},"body":{"changelog.html":{}}}],["77edf2f",{"_index":703,"title":{},"body":{"changelog.html":{}}}],["78cb623",{"_index":630,"title":{},"body":{"changelog.html":{}}}],["7c88f18",{"_index":710,"title":{},"body":{"changelog.html":{}}}],["80",{"_index":536,"title":{},"body":{"components/EChartComponent.html":{}}}],["8000",{"_index":788,"title":{},"body":{"index.html":{}}}],["87c3bba",{"_index":636,"title":{},"body":{"changelog.html":{}}}],["931eb7c",{"_index":659,"title":{},"body":{"changelog.html":{}}}],["955be2a",{"_index":653,"title":{},"body":{"changelog.html":{}}}],["_",{"_index":146,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["_.clonedeep(legend",{"_index":345,"title":{},"body":{"components/ChartComponent.html":{}}}],["_.clonedeep(this._config",{"_index":277,"title":{},"body":{"components/ChartComponent.html":{}}}],["_.clonedeep(this._config.data",{"_index":286,"title":{},"body":{"components/ChartComponent.html":{}}}],["_.clonedeep(this._echartsopt",{"_index":519,"title":{},"body":{"components/EChartComponent.html":{}}}],["_.clonedeep(this._prevconfig",{"_index":280,"title":{},"body":{"components/ChartComponent.html":{}}}],["_.clonedeep(this.dataset",{"_index":327,"title":{},"body":{"components/ChartComponent.html":{}}}],["_.clonedeep(this.label",{"_index":331,"title":{},"body":{"components/ChartComponent.html":{}}}],["_.isarray(p.data.valu",{"_index":570,"title":{},"body":{"components/EChartComponent.html":{}}}],["_.isarray(param",{"_index":577,"title":{},"body":{"components/EChartComponent.html":{}}}],["_.isboolean(legend",{"_index":343,"title":{},"body":{"components/ChartComponent.html":{}}}],["_.isempty(this._config.options.scal",{"_index":385,"title":{},"body":{"components/ChartComponent.html":{}}}],["_.isequal(json.stringify(this._config.opt",{"_index":263,"title":{},"body":{"components/ChartComponent.html":{}}}],["_.isequal(this._config.data",{"_index":260,"title":{},"body":{"components/ChartComponent.html":{}}}],["_.isnumber(d",{"_index":189,"title":{},"body":{"components/ChartComponent.html":{}}}],["_.isnumber(d.i",{"_index":402,"title":{},"body":{"components/ChartComponent.html":{}}}],["_.isnumber(item",{"_index":523,"title":{},"body":{"components/EChartComponent.html":{}}}],["_.isnumber(item.i",{"_index":524,"title":{},"body":{"components/EChartComponent.html":{}}}],["_.isnumber(point",{"_index":178,"title":{},"body":{"components/ChartComponent.html":{}}}],["_.isnumber(valu",{"_index":181,"title":{},"body":{"components/ChartComponent.html":{}}}],["_.isobject(legend",{"_index":344,"title":{},"body":{"components/ChartComponent.html":{}}}],["_.isobject(this.legend",{"_index":590,"title":{},"body":{"components/EChartComponent.html":{}}}],["_.isstring(legend",{"_index":336,"title":{},"body":{"components/ChartComponent.html":{}}}],["_.isstring(this.legend",{"_index":585,"title":{},"body":{"components/EChartComponent.html":{}}}],["_.isstring(v.label",{"_index":483,"title":{},"body":{"components/EChartComponent.html":{}}}],["_.join([word",{"_index":200,"title":{},"body":{"components/ChartComponent.html":{}}}],["_.merge(d",{"_index":410,"title":{},"body":{"components/ChartComponent.html":{}}}],["_.merge(dataset",{"_index":407,"title":{},"body":{"components/ChartComponent.html":{}}}],["_.merge(opt",{"_index":520,"title":{},"body":{"components/EChartComponent.html":{}}}],["_.merge(this._config.opt",{"_index":399,"title":{},"body":{"components/ChartComponent.html":{}}}],["_.min(_.flatmap(d",{"_index":370,"title":{},"body":{"components/ChartComponent.html":{}}}],["_.pickby(this._config.opt",{"_index":386,"title":{},"body":{"components/ChartComponent.html":{}}}],["_.set(this._config.opt",{"_index":332,"title":{},"body":{"components/ChartComponent.html":{}}}],["_.sumby(dsdata",{"_index":187,"title":{},"body":{"components/ChartComponent.html":{}}}],["_applycolors(color",{"_index":403,"title":{},"body":{"components/ChartComponent.html":{}}}],["_applyconfig",{"_index":320,"title":{},"body":{"components/ChartComponent.html":{}}}],["_chart",{"_index":245,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["_chartcontain",{"_index":248,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["_checksiz",{"_index":304,"title":{},"body":{"components/ChartComponent.html":{}}}],["_checkupdate(res",{"_index":254,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["_config",{"_index":242,"title":{},"body":{"components/ChartComponent.html":{}}}],["_createnewchart(cfg",{"_index":289,"title":{},"body":{"components/ChartComponent.html":{}}}],["_definecolors(seri",{"_index":551,"title":{},"body":{"components/EChartComponent.html":{}}}],["_definepieshape(seri",{"_index":532,"title":{},"body":{"components/EChartComponent.html":{}}}],["_echartsopt",{"_index":460,"title":{},"body":{"components/EChartComponent.html":{}}}],["_formattooltip(currencycod",{"_index":560,"title":{},"body":{"components/EChartComponent.html":{}}}],["_generatelegendoptions(multiseri",{"_index":583,"title":{},"body":{"components/EChartComponent.html":{}}}],["_isyaxisallnumbers(data",{"_index":400,"title":{},"body":{"components/ChartComponent.html":{}}}],["_mapdataitem(item",{"_index":522,"title":{},"body":{"components/EChartComponent.html":{}}}],["_ondestroy",{"_index":251,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["_prevconfig",{"_index":244,"title":{},"body":{"components/ChartComponent.html":{}}}],["_recalculates",{"_index":470,"title":{},"body":{"components/EChartComponent.html":{}}}],["_refresh(configchang",{"_index":275,"title":{},"body":{"components/ChartComponent.html":{}}}],["_typemap",{"_index":462,"title":{},"body":{"components/EChartComponent.html":{}}}],["a1278fd",{"_index":712,"title":{},"body":{"changelog.html":{}}}],["a1f10c6",{"_index":676,"title":{},"body":{"changelog.html":{}}}],["a6ead79",{"_index":719,"title":{},"body":{"changelog.html":{}}}],["a8a62f9",{"_index":721,"title":{},"body":{"changelog.html":{}}}],["abil",{"_index":685,"title":{},"body":{"changelog.html":{}}}],["abov",{"_index":831,"title":{},"body":{"license.html":{}}}],["absent",{"_index":56,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["action",{"_index":852,"title":{},"body":{"license.html":{}}}],["actual_compon",{"_index":419,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["add",{"_index":628,"title":{},"body":{"changelog.html":{}}}],["aee730",{"_index":611,"title":{},"body":{"changelog.html":{}}}],["afterlabel",{"_index":162,"title":{},"body":{"components/ChartComponent.html":{}}}],["alias",{"_index":862,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["and/or",{"_index":824,"title":{},"body":{"license.html":{}}}],["angular",{"_index":640,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["angular/common",{"_index":145,"title":{},"body":{"components/ChartComponent.html":{},"modules/ChartsModule.html":{},"components/EChartComponent.html":{}}}],["angular/cor",{"_index":140,"title":{},"body":{"components/ChartComponent.html":{},"modules/ChartsModule.html":{},"components/EChartComponent.html":{},"dependencies.html":{},"index.html":{}}}],["any).legend",{"_index":223,"title":{},"body":{"components/ChartComponent.html":{}}}],["any).plugin",{"_index":300,"title":{},"body":{"components/ChartComponent.html":{}}}],["any[])).map(d",{"_index":489,"title":{},"body":{"components/EChartComponent.html":{}}}],["app",{"_index":649,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["area",{"_index":107,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["aris",{"_index":856,"title":{},"body":{"license.html":{}}}],["arrang",{"_index":103,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["array",{"_index":45,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["aspect",{"_index":122,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["aspectratio",{"_index":333,"title":{},"body":{"components/ChartComponent.html":{}}}],["assign",{"_index":60,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["associ",{"_index":815,"title":{},"body":{"license.html":{}}}],["async",{"_index":463,"title":{},"body":{"components/EChartComponent.html":{}}}],["author",{"_index":846,"title":{},"body":{"license.html":{}}}],["auto",{"_index":69,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{},"changelog.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["automat",{"_index":104,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{},"changelog.html":{}}}],["automatic)yarn",{"_index":800,"title":{},"body":{"index.html":{}}}],["avoid",{"_index":678,"title":{},"body":{"changelog.html":{}}}],["ax",{"_index":353,"title":{},"body":{"components/ChartComponent.html":{}}}],["axi",{"_index":84,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["axispoint",{"_index":501,"title":{},"body":{"components/EChartComponent.html":{}}}],["b3d2575",{"_index":642,"title":{},"body":{"changelog.html":{}}}],["bar",{"_index":71,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["base",{"_index":51,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{},"index.html":{}}}],["base.chart",{"_index":153,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["basechart",{"_index":9,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["basechart:101",{"_index":90,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["basechart:116",{"_index":64,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["basechart:134",{"_index":78,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["basechart:148",{"_index":123,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["basechart:166",{"_index":112,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["basechart:179",{"_index":87,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["basechart:192",{"_index":96,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["basechart:205",{"_index":116,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["basechart:218",{"_index":128,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["basechart:231",{"_index":121,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["basechart:243",{"_index":132,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["basechart:247",{"_index":134,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["basechart:74",{"_index":98,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["basechart:88",{"_index":130,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["be",{"_index":679,"title":{},"body":{"changelog.html":{}}}],["becom",{"_index":799,"title":{},"body":{"index.html":{}}}],["bind",{"_index":700,"title":{},"body":{"changelog.html":{}}}],["block",{"_index":444,"title":{},"body":{"components/EChartComponent.html":{}}}],["boolean",{"_index":101,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{},"miscellaneous/typealiases.html":{}}}],["border",{"_index":445,"title":{},"body":{"components/EChartComponent.html":{}}}],["both",{"_index":163,"title":{},"body":{"components/ChartComponent.html":{}}}],["bottom",{"_index":339,"title":{},"body":{"components/ChartComponent.html":{}}}],["bottom'].indexof(l",{"_index":587,"title":{},"body":{"components/EChartComponent.html":{}}}],["box",{"_index":233,"title":{},"body":{"components/ChartComponent.html":{},"changelog.html":{}}}],["box.left",{"_index":235,"title":{},"body":{"components/ChartComponent.html":{}}}],["box.top",{"_index":236,"title":{},"body":{"components/ChartComponent.html":{}}}],["break",{"_index":238,"title":{},"body":{"components/ChartComponent.html":{},"changelog.html":{}}}],["brows",{"_index":859,"title":{},"body":{"modules.html":{}}}],["bug",{"_index":619,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":646,"title":{},"body":{"changelog.html":{}}}],["bump",{"_index":795,"title":{},"body":{"index.html":{}}}],["bundler",{"_index":769,"title":{},"body":{"index.html":{}}}],["c",{"_index":803,"title":{},"body":{"license.html":{}}}],["callback",{"_index":356,"title":{},"body":{"components/ChartComponent.html":{}}}],["canva",{"_index":224,"title":{},"body":{"components/ChartComponent.html":{}}}],["canvas.style.cursor",{"_index":239,"title":{},"body":{"components/ChartComponent.html":{}}}],["cataxi",{"_index":498,"title":{},"body":{"components/EChartComponent.html":{}}}],["categori",{"_index":499,"title":{},"body":{"components/EChartComponent.html":{}}}],["ce9fae3",{"_index":650,"title":{},"body":{"changelog.html":{}}}],["center",{"_index":545,"title":{},"body":{"components/EChartComponent.html":{}}}],["cf",{"_index":553,"title":{},"body":{"components/EChartComponent.html":{}}}],["cfg",{"_index":279,"title":{},"body":{"components/ChartComponent.html":{}}}],["cfg.data",{"_index":283,"title":{},"body":{"components/ChartComponent.html":{}}}],["cfg.option",{"_index":313,"title":{},"body":{"components/ChartComponent.html":{}}}],["chang",{"_index":594,"title":{},"body":{"changelog.html":{}}}],["changedetect",{"_index":11,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["changedetectionstrategi",{"_index":137,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":12,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["changelog",{"_index":593,"title":{"changelog.html":{}},"body":{}}],["charg",{"_index":810,"title":{},"body":{"license.html":{}}}],["chart",{"_index":15,"title":{},"body":{"components/ChartComponent.html":{},"modules/ChartsModule.html":{},"components/EChartComponent.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["chart'},{'nam",{"_index":416,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["chart(canva",{"_index":303,"title":{},"body":{"components/ChartComponent.html":{}}}],["chart.chartconfigur",{"_index":243,"title":{},"body":{"components/ChartComponent.html":{}}}],["chart.chartconfiguration.data.dataset",{"_index":89,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["chart.chartconfiguration.data.label",{"_index":97,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["chart.chartconfiguration.opt",{"_index":113,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["chart.chartconfiguration.options.legend",{"_index":111,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["chart.chartconfiguration.options.legend.display",{"_index":102,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["chart.chartconfiguration.options.legend.posit",{"_index":110,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["chart.chartconfiguration.typ",{"_index":129,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["chart.chartdataset",{"_index":88,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{},"index.html":{}}}],["chart.chartlegendopt",{"_index":109,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{},"miscellaneous/typealiases.html":{}}}],["chart.chartpoint",{"_index":365,"title":{},"body":{"components/ChartComponent.html":{}}}],["chart.chartpoint[]).map(p",{"_index":371,"title":{},"body":{"components/ChartComponent.html":{}}}],["chart.charttooltipcallback['afterlabel",{"_index":165,"title":{},"body":{"components/ChartComponent.html":{}}}],["chart.charttooltipcallback['label",{"_index":164,"title":{},"body":{"components/ChartComponent.html":{}}}],["chart.charttooltipcallback['titl",{"_index":206,"title":{},"body":{"components/ChartComponent.html":{}}}],["chart.commonax",{"_index":354,"title":{},"body":{"components/ChartComponent.html":{}}}],["chart.compon",{"_index":430,"title":{},"body":{"modules/ChartsModule.html":{}}}],["chart.j",{"_index":741,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["chart.positiontyp",{"_index":342,"title":{},"body":{"components/ChartComponent.html":{},"miscellaneous/typealiases.html":{}}}],["chart/doc",{"_index":775,"title":{},"body":{"index.html":{}}}],["chart_default_color",{"_index":433,"title":{},"body":{"modules/ChartsModule.html":{},"miscellaneous/variables.html":{}}}],["chartcompon",{"_index":1,"title":{"components/ChartComponent.html":{}},"body":{"components/ChartComponent.html":{},"modules/ChartsModule.html":{},"components/EChartComponent.html":{}}}],["chartdataset",{"_index":764,"title":{},"body":{"index.html":{}}}],["chartevent.i",{"_index":228,"title":{},"body":{"components/ChartComponent.html":{}}}],["chartevent.x",{"_index":226,"title":{},"body":{"components/ChartComponent.html":{}}}],["chartinst",{"_index":222,"title":{},"body":{"components/ChartComponent.html":{}}}],["chartinstance.canva",{"_index":225,"title":{},"body":{"components/ChartComponent.html":{}}}],["chartsmodul",{"_index":423,"title":{"modules/ChartsModule.html":{}},"body":{"modules/ChartsModule.html":{},"index.html":{},"modules.html":{}}}],["chartthen",{"_index":758,"title":{},"body":{"index.html":{}}}],["chore",{"_index":734,"title":{},"body":{"changelog.html":{}}}],["claim",{"_index":849,"title":{},"body":{"license.html":{}}}],["class",{"_index":240,"title":{},"body":{"components/ChartComponent.html":{},"modules/ChartsModule.html":{},"components/EChartComponent.html":{},"index.html":{},"overview.html":{}}}],["code",{"_index":81,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{},"changelog.html":{}}}],["color",{"_index":23,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{},"changelog.html":{}}}],["color.help",{"_index":143,"title":{},"body":{"components/ChartComponent.html":{},"modules/ChartsModule.html":{},"components/EChartComponent.html":{}}}],["colorgroup",{"_index":404,"title":{},"body":{"components/ChartComponent.html":{}}}],["colors[i",{"_index":557,"title":{},"body":{"components/EChartComponent.html":{}}}],["colorsfor",{"_index":24,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["colorsfortyp",{"_index":150,"title":{},"body":{"components/ChartComponent.html":{},"miscellaneous/typealiases.html":{}}}],["colour",{"_index":434,"title":{},"body":{"modules/ChartsModule.html":{},"miscellaneous/variables.html":{}}}],["commit",{"_index":602,"title":{},"body":{"changelog.html":{}}}],["commonmodul",{"_index":429,"title":{},"body":{"modules/ChartsModule.html":{}}}],["compil",{"_index":683,"title":{},"body":{"changelog.html":{}}}],["compodoc",{"_index":773,"title":{},"body":{"index.html":{}}}],["compon",{"_index":0,"title":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":415,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["condit",{"_index":830,"title":{},"body":{"license.html":{}}}],["configchang",{"_index":262,"title":{},"body":{"components/ChartComponent.html":{}}}],["configur",{"_index":126,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["connect",{"_index":858,"title":{},"body":{"license.html":{}}}],["console.warn('ezi",{"_index":382,"title":{},"body":{"components/ChartComponent.html":{}}}],["const",{"_index":155,"title":{},"body":{"components/ChartComponent.html":{},"modules/ChartsModule.html":{},"components/EChartComponent.html":{}}}],["constructor",{"_index":35,"title":{},"body":{"components/ChartComponent.html":{},"modules/ChartsModule.html":{},"components/EChartComponent.html":{}}}],["constructor(zon",{"_index":36,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["contain",{"_index":291,"title":{},"body":{"components/ChartComponent.html":{}}}],["container.appendchild(canva",{"_index":299,"title":{},"body":{"components/ChartComponent.html":{}}}],["container.getelementsbytagname('canva",{"_index":295,"title":{},"body":{"components/ChartComponent.html":{}}}],["container.removechild(nodes.item(0",{"_index":297,"title":{},"body":{"components/ChartComponent.html":{}}}],["content",{"_index":751,"title":{},"body":{"index.html":{}}}],["continu",{"_index":793,"title":{},"body":{"index.html":{}}}],["contract",{"_index":853,"title":{},"body":{"license.html":{}}}],["copi",{"_index":813,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":802,"title":{},"body":{"license.html":{}}}],["correct",{"_index":729,"title":{},"body":{"changelog.html":{}}}],["correspond",{"_index":68,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["curr",{"_index":352,"title":{},"body":{"components/ChartComponent.html":{}}}],["currenc",{"_index":25,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{},"changelog.html":{}}}],["currencycod",{"_index":573,"title":{},"body":{"components/EChartComponent.html":{}}}],["current",{"_index":782,"title":{},"body":{"index.html":{}}}],["cursor",{"_index":704,"title":{},"body":{"changelog.html":{}}}],["cursorstyl",{"_index":229,"title":{},"body":{"components/ChartComponent.html":{}}}],["customis",{"_index":686,"title":{},"body":{"changelog.html":{}}}],["d",{"_index":188,"title":{},"body":{"components/ChartComponent.html":{}}}],["d.data",{"_index":348,"title":{},"body":{"components/ChartComponent.html":{}}}],["d.i",{"_index":190,"title":{},"body":{"components/ChartComponent.html":{}}}],["d.itemstyl",{"_index":559,"title":{},"body":{"components/EChartComponent.html":{}}}],["d.label",{"_index":329,"title":{},"body":{"components/ChartComponent.html":{}}}],["d.name",{"_index":494,"title":{},"body":{"components/EChartComponent.html":{}}}],["d6f5bc5",{"_index":668,"title":{},"body":{"changelog.html":{}}}],["damag",{"_index":850,"title":{},"body":{"license.html":{}}}],["data",{"_index":52,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["data.dataset",{"_index":168,"title":{},"body":{"components/ChartComponent.html":{}}}],["data.every(d",{"_index":401,"title":{},"body":{"components/ChartComponent.html":{}}}],["data.label",{"_index":212,"title":{},"body":{"components/ChartComponent.html":{}}}],["dataorparamschang",{"_index":255,"title":{},"body":{"components/ChartComponent.html":{}}}],["dataset",{"_index":26,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{},"changelog.html":{}}}],["datasets.length",{"_index":406,"title":{},"body":{"components/ChartComponent.html":{}}}],["deal",{"_index":816,"title":{},"body":{"license.html":{}}}],["decimalpip",{"_index":144,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["decimalpipe(moment.locale()).transform(v",{"_index":575,"title":{},"body":{"components/EChartComponent.html":{}}}],["decimalpipe(moment.locale()).transform(valu",{"_index":183,"title":{},"body":{"components/ChartComponent.html":{}}}],["declar",{"_index":425,"title":{},"body":{"modules/ChartsModule.html":{}}}],["default",{"_index":230,"title":{},"body":{"components/ChartComponent.html":{},"modules/ChartsModule.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["defaultcolor",{"_index":436,"title":{},"body":{"modules/ChartsModule.html":{}}}],["defin",{"_index":38,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["defult",{"_index":61,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["demo",{"_index":648,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["depend",{"_index":738,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{}}}],["detect",{"_index":699,"title":{},"body":{"changelog.html":{}}}],["dev",{"_index":781,"title":{},"body":{"index.html":{}}}],["develop",{"_index":753,"title":{},"body":{"index.html":{}}}],["digit",{"_index":27,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{},"changelog.html":{}}}],["digitinfo",{"_index":161,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["direct",{"_index":413,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["directori",{"_index":783,"title":{},"body":{"index.html":{}}}],["display",{"_index":100,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{},"changelog.html":{}}}],["distribut",{"_index":822,"title":{},"body":{"license.html":{}}}],["div",{"_index":471,"title":{},"body":{"components/EChartComponent.html":{}}}],["div.clientwidth",{"_index":481,"title":{},"body":{"components/EChartComponent.html":{}}}],["div.style.height",{"_index":475,"title":{},"body":{"components/EChartComponent.html":{}}}],["document",{"_index":598,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["document.createelement('canva",{"_index":298,"title":{},"body":{"components/ChartComponent.html":{}}}],["dom",{"_index":4,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["doughnut",{"_index":390,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["ds",{"_index":167,"title":{},"body":{"components/ChartComponent.html":{}}}],["ds.data",{"_index":409,"title":{},"body":{"components/ChartComponent.html":{}}}],["ds.every(d",{"_index":347,"title":{},"body":{"components/ChartComponent.html":{}}}],["ds.length",{"_index":169,"title":{},"body":{"components/ChartComponent.html":{}}}],["ds.some(d",{"_index":328,"title":{},"body":{"components/ChartComponent.html":{}}}],["ds[0].data",{"_index":381,"title":{},"body":{"components/ChartComponent.html":{}}}],["ds[tooltipitem.datasetindex",{"_index":171,"title":{},"body":{"components/ChartComponent.html":{}}}],["dsdata",{"_index":174,"title":{},"body":{"components/ChartComponent.html":{}}}],["dsdata[tooltipitem.index",{"_index":176,"title":{},"body":{"components/ChartComponent.html":{}}}],["each",{"_index":54,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["echart",{"_index":418,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["echart.compon",{"_index":432,"title":{},"body":{"modules/ChartsModule.html":{}}}],["echartcompon",{"_index":417,"title":{"components/EChartComponent.html":{}},"body":{"components/ChartComponent.html":{},"modules/ChartsModule.html":{},"components/EChartComponent.html":{}}}],["echarts.echart",{"_index":459,"title":{},"body":{"components/EChartComponent.html":{}}}],["echarts.echartopt",{"_index":461,"title":{},"body":{"components/EChartComponent.html":{}}}],["echarts.echartoption.xaxi",{"_index":512,"title":{},"body":{"components/EChartComponent.html":{}}}],["echarts.echartoption.yaxi",{"_index":510,"title":{},"body":{"components/EChartComponent.html":{}}}],["element",{"_index":412,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["elementref",{"_index":138,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["emphasi",{"_index":546,"title":{},"body":{"components/EChartComponent.html":{}}}],["empti",{"_index":383,"title":{},"body":{"components/ChartComponent.html":{}}}],["encapsul",{"_index":440,"title":{},"body":{"components/EChartComponent.html":{}}}],["environ",{"_index":777,"title":{},"body":{"index.html":{}}}],["error",{"_index":647,"title":{},"body":{"changelog.html":{}}}],["even",{"_index":651,"title":{},"body":{"changelog.html":{}}}],["event",{"_index":845,"title":{},"body":{"license.html":{}}}],["every(item",{"_index":366,"title":{},"body":{"components/ChartComponent.html":{}}}],["everyth",{"_index":770,"title":{},"body":{"index.html":{}}}],["exampl",{"_index":105,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["experiment",{"_index":667,"title":{},"body":{"changelog.html":{}}}],["export",{"_index":204,"title":{},"body":{"components/ChartComponent.html":{},"modules/ChartsModule.html":{},"components/EChartComponent.html":{},"index.html":{}}}],["express",{"_index":838,"title":{},"body":{"license.html":{}}}],["extend",{"_index":8,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["ezi",{"_index":14,"title":{},"body":{"components/ChartComponent.html":{},"modules/ChartsModule.html":{},"components/EChartComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ezychart",{"_index":771,"title":{},"body":{"index.html":{}}}],["f5ca0e5",{"_index":727,"title":{},"body":{"changelog.html":{}}}],["fals",{"_index":256,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["featur",{"_index":608,"title":{},"body":{"changelog.html":{}}}],["file",{"_index":6,"title":{},"body":{"components/ChartComponent.html":{},"modules/ChartsModule.html":{},"components/EChartComponent.html":{},"changelog.html":{},"license.html":{}}}],["final",{"_index":761,"title":{},"body":{"index.html":{}}}],["find",{"_index":766,"title":{},"body":{"index.html":{}}}],["fine",{"_index":723,"title":{},"body":{"changelog.html":{}}}],["first",{"_index":208,"title":{},"body":{"components/ChartComponent.html":{}}}],["fit",{"_index":841,"title":{},"body":{"license.html":{}}}],["fix",{"_index":620,"title":{},"body":{"changelog.html":{}}}],["follow",{"_index":829,"title":{},"body":{"license.html":{}}}],["foreach(w",{"_index":199,"title":{},"body":{"components/ChartComponent.html":{}}}],["format",{"_index":50,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["formatmoney",{"_index":151,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["formatmoney(v",{"_index":574,"title":{},"body":{"components/EChartComponent.html":{}}}],["formatparam",{"_index":563,"title":{},"body":{"components/EChartComponent.html":{}}}],["formatparam(p)).join",{"_index":580,"title":{},"body":{"components/EChartComponent.html":{}}}],["formatparam(param",{"_index":582,"title":{},"body":{"components/EChartComponent.html":{}}}],["formatscal",{"_index":152,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["formatscale(v",{"_index":358,"title":{},"body":{"components/ChartComponent.html":{}}}],["formatscale(valu",{"_index":507,"title":{},"body":{"components/EChartComponent.html":{}}}],["formatt",{"_index":506,"title":{},"body":{"components/EChartComponent.html":{}}}],["free",{"_index":809,"title":{},"body":{"license.html":{}}}],["function",{"_index":158,"title":{"miscellaneous/functions.html":{}},"body":{"components/ChartComponent.html":{},"miscellaneous/functions.html":{}}}],["furnish",{"_index":827,"title":{},"body":{"license.html":{}}}],["gener",{"_index":66,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{},"changelog.html":{},"index.html":{}}}],["generatecolorsasstr",{"_index":458,"title":{},"body":{"components/EChartComponent.html":{}}}],["generatecolorsasstrings(this.color",{"_index":554,"title":{},"body":{"components/EChartComponent.html":{}}}],["generatecolorsbydatapoint",{"_index":142,"title":{},"body":{"components/ChartComponent.html":{}}}],["generatecolorsbydatapoints(color",{"_index":408,"title":{},"body":{"components/ChartComponent.html":{}}}],["generatecolorsbyseri",{"_index":141,"title":{},"body":{"components/ChartComponent.html":{}}}],["generatecolorsbyseries(color",{"_index":405,"title":{},"body":{"components/ChartComponent.html":{}}}],["get",{"_index":591,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["gettooltiplabelcallback",{"_index":159,"title":{},"body":{"components/ChartComponent.html":{}}}],["gettooltiptitlecallback(horizont",{"_index":205,"title":{},"body":{"components/ChartComponent.html":{}}}],["gettooltiptitlecallback(this.typ",{"_index":397,"title":{},"body":{"components/ChartComponent.html":{}}}],["grant",{"_index":808,"title":{},"body":{"license.html":{}}}],["grey",{"_index":548,"title":{},"body":{"components/EChartComponent.html":{}}}],["guidelin",{"_index":603,"title":{},"body":{"changelog.html":{}}}],["height",{"_index":309,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["height}px",{"_index":476,"title":{},"body":{"components/EChartComponent.html":{}}}],["here",{"_index":774,"title":{},"body":{"index.html":{}}}],["herebi",{"_index":807,"title":{},"body":{"license.html":{}}}],["hex",{"_index":47,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["hidden",{"_index":106,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{},"changelog.html":{}}}],["hit",{"_index":797,"title":{},"body":{"index.html":{}}}],["holder",{"_index":847,"title":{},"body":{"license.html":{}}}],["horizont",{"_index":219,"title":{},"body":{"components/ChartComponent.html":{}}}],["horizontalbar",{"_index":72,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["hover",{"_index":705,"title":{},"body":{"changelog.html":{}}}],["html",{"_index":411,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["htmldivel",{"_index":472,"title":{},"body":{"components/EChartComponent.html":{}}}],["htmlelement",{"_index":292,"title":{},"body":{"components/ChartComponent.html":{}}}],["https://angular.io/api/common/decimalpip",{"_index":94,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["https://ztan.github.io/ezi",{"_index":749,"title":{},"body":{"index.html":{}}}],["impli",{"_index":839,"title":{},"body":{"license.html":{}}}],["import",{"_index":136,"title":{},"body":{"components/ChartComponent.html":{},"modules/ChartsModule.html":{},"components/EChartComponent.html":{},"changelog.html":{},"index.html":{}}}],["improv",{"_index":672,"title":{},"body":{"changelog.html":{}}}],["includ",{"_index":759,"title":{},"body":{"index.html":{},"license.html":{}}}],["incorrect",{"_index":702,"title":{},"body":{"changelog.html":{}}}],["increas",{"_index":707,"title":{},"body":{"changelog.html":{}}}],["indent",{"_index":452,"title":{},"body":{"components/EChartComponent.html":{}}}],["index",{"_index":17,"title":{"index.html":{}},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indic",{"_index":442,"title":{},"body":{"components/EChartComponent.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/ChartComponent.html":{},"modules/ChartsModule.html":{},"components/EChartComponent.html":{},"changelog.html":{}}}],["inherit",{"_index":63,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["inject",{"_index":428,"title":{},"body":{"modules/ChartsModule.html":{}}}],["inject(chart_default_color",{"_index":435,"title":{},"body":{"modules/ChartsModule.html":{}}}],["injectiontoken",{"_index":427,"title":{},"body":{"modules/ChartsModule.html":{},"miscellaneous/variables.html":{}}}],["inlin",{"_index":443,"title":{},"body":{"components/EChartComponent.html":{}}}],["input",{"_index":21,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{},"changelog.html":{}}}],["instal",{"_index":752,"title":{},"body":{"index.html":{}}}],["intern",{"_index":154,"title":{},"body":{"components/ChartComponent.html":{}}}],["interv",{"_index":726,"title":{},"body":{"changelog.html":{}}}],["iso",{"_index":79,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["isparamchang",{"_index":19,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["isparamchanged(properti",{"_index":131,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["issu",{"_index":720,"title":{},"body":{"changelog.html":{}}}],["istim",{"_index":491,"title":{},"body":{"components/EChartComponent.html":{}}}],["istimescal",{"_index":364,"title":{},"body":{"components/ChartComponent.html":{}}}],["it'",{"_index":652,"title":{},"body":{"changelog.html":{}}}],["item",{"_index":216,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["item.i",{"_index":531,"title":{},"body":{"components/EChartComponent.html":{}}}],["item.index",{"_index":221,"title":{},"body":{"components/ChartComponent.html":{}}}],["item.x",{"_index":367,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["item.xlabel",{"_index":218,"title":{},"body":{"components/ChartComponent.html":{}}}],["item.ylabel",{"_index":220,"title":{},"body":{"components/ChartComponent.html":{}}}],["json.stringify(this._prevconfig.opt",{"_index":264,"title":{},"body":{"components/ChartComponent.html":{}}}],["key",{"_index":387,"title":{},"body":{"components/ChartComponent.html":{}}}],["kind",{"_index":837,"title":{},"body":{"license.html":{}}}],["l",{"_index":375,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["label",{"_index":28,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{},"changelog.html":{},"index.html":{}}}],["labelcount",{"_index":213,"title":{},"body":{"components/ChartComponent.html":{}}}],["labels.join",{"_index":194,"title":{},"body":{"components/ChartComponent.html":{}}}],["labels.length",{"_index":214,"title":{},"body":{"components/ChartComponent.html":{}}}],["labels.push(`${tot",{"_index":191,"title":{},"body":{"components/ChartComponent.html":{}}}],["labels.push(formatmoney(valu",{"_index":180,"title":{},"body":{"components/ChartComponent.html":{}}}],["labels.push(label",{"_index":173,"title":{},"body":{"components/ChartComponent.html":{}}}],["labels.push(new",{"_index":182,"title":{},"body":{"components/ChartComponent.html":{}}}],["labels.push(tooltipitem.ylabel",{"_index":184,"title":{},"body":{"components/ChartComponent.html":{}}}],["labels[i",{"_index":540,"title":{},"body":{"components/EChartComponent.html":{}}}],["left",{"_index":455,"title":{},"body":{"components/EChartComponent.html":{}}}],["left'].indexof(legend",{"_index":340,"title":{},"body":{"components/ChartComponent.html":{}}}],["legend",{"_index":29,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{},"changelog.html":{}}}],["legend.left",{"_index":231,"title":{},"body":{"components/ChartComponent.html":{}}}],["legend.legendhitbox",{"_index":234,"title":{},"body":{"components/ChartComponent.html":{}}}],["legend.ori",{"_index":588,"title":{},"body":{"components/EChartComponent.html":{}}}],["legend.top",{"_index":232,"title":{},"body":{"components/ChartComponent.html":{}}}],["legend.x",{"_index":586,"title":{},"body":{"components/EChartComponent.html":{}}}],["legendopt",{"_index":312,"title":{},"body":{"components/ChartComponent.html":{}}}],["legendopt.display",{"_index":316,"title":{},"body":{"components/ChartComponent.html":{}}}],["legendtyp",{"_index":864,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["length",{"_index":349,"title":{},"body":{"components/ChartComponent.html":{}}}],["less",{"_index":57,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["liabil",{"_index":851,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":848,"title":{},"body":{"license.html":{}}}],["librari",{"_index":662,"title":{},"body":{"changelog.html":{}}}],["licens",{"_index":754,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["limit",{"_index":818,"title":{},"body":{"license.html":{}}}],["line",{"_index":73,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{},"changelog.html":{}}}],["local",{"_index":780,"title":{},"body":{"index.html":{}}}],["lodash",{"_index":147,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{},"dependencies.html":{}}}],["log",{"_index":595,"title":{},"body":{"changelog.html":{}}}],["long",{"_index":692,"title":{},"body":{"changelog.html":{}}}],["m",{"_index":525,"title":{},"body":{"components/EChartComponent.html":{}}}],["m.get('day",{"_index":530,"title":{},"body":{"components/EChartComponent.html":{}}}],["m.get('month",{"_index":529,"title":{},"body":{"components/EChartComponent.html":{}}}],["m.get('year",{"_index":528,"title":{},"body":{"components/EChartComponent.html":{}}}],["main",{"_index":83,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["maintyp",{"_index":486,"title":{},"body":{"components/EChartComponent.html":{}}}],["make",{"_index":660,"title":{},"body":{"changelog.html":{}}}],["makedoughnut",{"_index":533,"title":{},"body":{"components/EChartComponent.html":{}}}],["match",{"_index":421,"title":{},"body":{"components/ChartComponent.html":{},"modules/ChartsModule.html":{},"components/EChartComponent.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.max(div.clientwidth",{"_index":473,"title":{},"body":{"components/EChartComponent.html":{}}}],["maxlength",{"_index":196,"title":{},"body":{"components/ChartComponent.html":{},"miscellaneous/functions.html":{}}}],["merchant",{"_index":840,"title":{},"body":{"license.html":{}}}],["merg",{"_index":820,"title":{},"body":{"license.html":{}}}],["messag",{"_index":717,"title":{},"body":{"changelog.html":{}}}],["metadata",{"_index":10,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["method",{"_index":18,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["min",{"_index":376,"title":{},"body":{"components/ChartComponent.html":{},"changelog.html":{}}}],["mintim",{"_index":369,"title":{},"body":{"components/ChartComponent.html":{}}}],["mintime.toisostr",{"_index":377,"title":{},"body":{"components/ChartComponent.html":{}}}],["miscellan",{"_index":746,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["miss",{"_index":59,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["mit",{"_index":801,"title":{},"body":{"index.html":{},"license.html":{}}}],["mode",{"_index":610,"title":{},"body":{"changelog.html":{}}}],["modifi",{"_index":819,"title":{},"body":{"license.html":{}}}],["modul",{"_index":422,"title":{"modules/ChartsModule.html":{},"modules.html":{}},"body":{"modules/ChartsModule.html":{},"changelog.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":148,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{},"dependencies.html":{}}}],["moment(d.name).isvalid",{"_index":495,"title":{},"body":{"components/EChartComponent.html":{}}}],["moment(item.x",{"_index":526,"title":{},"body":{"components/EChartComponent.html":{}}}],["moment(item.x).format(timeformat",{"_index":527,"title":{},"body":{"components/EChartComponent.html":{}}}],["moment(item.x).isvalid",{"_index":368,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["moment(p.x",{"_index":372,"title":{},"body":{"components/ChartComponent.html":{}}}],["moment.j",{"_index":124,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["multi",{"_index":613,"title":{},"body":{"changelog.html":{}}}],["multi_series_by_default",{"_index":156,"title":{},"body":{"components/ChartComponent.html":{}}}],["multi_series_by_default.indexof(this.typ",{"_index":322,"title":{},"body":{"components/ChartComponent.html":{}}}],["multipoint",{"_index":346,"title":{},"body":{"components/ChartComponent.html":{}}}],["multiseri",{"_index":584,"title":{},"body":{"components/EChartComponent.html":{}}}],["multityp",{"_index":321,"title":{},"body":{"components/ChartComponent.html":{}}}],["mycompon",{"_index":763,"title":{},"body":{"index.html":{}}}],["mymodul",{"_index":760,"title":{},"body":{"index.html":{}}}],["name",{"_index":42,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{},"miscellaneous/functions.html":{}}}],["namespac",{"_index":772,"title":{},"body":{"index.html":{}}}],["nearest",{"_index":380,"title":{},"body":{"components/ChartComponent.html":{}}}],["new",{"_index":302,"title":{},"body":{"components/ChartComponent.html":{},"modules/ChartsModule.html":{},"components/EChartComponent.html":{},"miscellaneous/variables.html":{}}}],["ngmodul",{"_index":426,"title":{},"body":{"modules/ChartsModule.html":{},"index.html":{}}}],["ngzone",{"_index":37,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["node",{"_index":294,"title":{},"body":{"components/ChartComponent.html":{}}}],["node.j",{"_index":778,"title":{},"body":{"index.html":{}}}],["nodes.length",{"_index":296,"title":{},"body":{"components/ChartComponent.html":{}}}],["none",{"_index":74,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{},"miscellaneous/typealiases.html":{}}}],["noninfring",{"_index":844,"title":{},"body":{"license.html":{}}}],["normal",{"_index":543,"title":{},"body":{"components/EChartComponent.html":{}}}],["notabl",{"_index":596,"title":{},"body":{"changelog.html":{}}}],["notic",{"_index":832,"title":{},"body":{"license.html":{}}}],["now",{"_index":210,"title":{},"body":{"components/ChartComponent.html":{}}}],["npm",{"_index":756,"title":{},"body":{"index.html":{}}}],["null",{"_index":690,"title":{},"body":{"changelog.html":{}}}],["number",{"_index":58,"title":{},"body":{"components/ChartComponent.html":{},"modules/ChartsModule.html":{},"components/EChartComponent.html":{}}}],["obtain",{"_index":812,"title":{},"body":{"license.html":{}}}],["on",{"_index":762,"title":{},"body":{"index.html":{}}}],["onc",{"_index":791,"title":{},"body":{"index.html":{}}}],["opt",{"_index":479,"title":{},"body":{"components/EChartComponent.html":{}}}],["option",{"_index":30,"title":{},"body":{"components/ChartComponent.html":{},"modules/ChartsModule.html":{},"components/EChartComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["otherwis",{"_index":855,"title":{},"body":{"license.html":{}}}],["out",{"_index":857,"title":{},"body":{"license.html":{}}}],["output",{"_index":91,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{},"changelog.html":{}}}],["overal",{"_index":119,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["overrid",{"_index":114,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["overview",{"_index":860,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":564,"title":{},"body":{"components/EChartComponent.html":{}}}],["p.data.valu",{"_index":572,"title":{},"body":{"components/EChartComponent.html":{}}}],["p.data.value[1",{"_index":571,"title":{},"body":{"components/EChartComponent.html":{}}}],["p.percent",{"_index":567,"title":{},"body":{"components/EChartComponent.html":{}}}],["p.seriesnam",{"_index":565,"title":{},"body":{"components/EChartComponent.html":{}}}],["packag",{"_index":737,"title":{"dependencies.html":{}},"body":{}}],["package.json",{"_index":796,"title":{},"body":{"index.html":{}}}],["pad",{"_index":454,"title":{},"body":{"components/EChartComponent.html":{}}}],["page",{"_index":623,"title":{},"body":{"changelog.html":{}}}],["palett",{"_index":62,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["param",{"_index":562,"title":{},"body":{"components/EChartComponent.html":{}}}],["param.map(p",{"_index":579,"title":{},"body":{"components/EChartComponent.html":{}}}],["param.nam",{"_index":581,"title":{},"body":{"components/EChartComponent.html":{}}}],["param[0].nam",{"_index":578,"title":{},"body":{"components/EChartComponent.html":{}}}],["paramet",{"_index":40,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{},"miscellaneous/functions.html":{}}}],["particular",{"_index":842,"title":{},"body":{"license.html":{}}}],["peer",{"_index":739,"title":{},"body":{"dependencies.html":{}}}],["per",{"_index":629,"title":{},"body":{"changelog.html":{}}}],["perc",{"_index":185,"title":{},"body":{"components/ChartComponent.html":{}}}],["percent",{"_index":561,"title":{},"body":{"components/EChartComponent.html":{}}}],["percentag",{"_index":31,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["percentonli",{"_index":566,"title":{},"body":{"components/EChartComponent.html":{}}}],["perform",{"_index":722,"title":{},"body":{"changelog.html":{}}}],["permiss",{"_index":806,"title":{},"body":{"license.html":{}}}],["permit",{"_index":826,"title":{},"body":{"license.html":{}}}],["person",{"_index":811,"title":{},"body":{"license.html":{}}}],["pick",{"_index":207,"title":{},"body":{"components/ChartComponent.html":{}}}],["pie",{"_index":389,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["pie/doughnut",{"_index":614,"title":{},"body":{"changelog.html":{}}}],["pielik",{"_index":552,"title":{},"body":{"components/EChartComponent.html":{}}}],["pleas",{"_index":92,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["plugin",{"_index":22,"title":{},"body":{"components/ChartComponent.html":{},"changelog.html":{}}}],["point",{"_index":53,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["point.i",{"_index":179,"title":{},"body":{"components/ChartComponent.html":{}}}],["pointer",{"_index":237,"title":{},"body":{"components/ChartComponent.html":{},"changelog.html":{}}}],["popov",{"_index":120,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["port",{"_index":787,"title":{},"body":{"index.html":{}}}],["portion",{"_index":835,"title":{},"body":{"license.html":{}}}],["posit",{"_index":544,"title":{},"body":{"components/EChartComponent.html":{}}}],["prepar",{"_index":776,"title":{},"body":{"index.html":{}}}],["privat",{"_index":241,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["project",{"_index":597,"title":{},"body":{"changelog.html":{}}}],["properli",{"_index":657,"title":{},"body":{"changelog.html":{}}}],["properti",{"_index":55,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["protect",{"_index":250,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["provid",{"_index":691,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["publish",{"_index":821,"title":{},"body":{"license.html":{}}}],["purpos",{"_index":843,"title":{},"body":{"license.html":{}}}],["r",{"_index":534,"title":{},"body":{"components/EChartComponent.html":{}}}],["radar",{"_index":157,"title":{},"body":{"components/ChartComponent.html":{},"changelog.html":{}}}],["radiu",{"_index":446,"title":{},"body":{"components/EChartComponent.html":{}}}],["ratio",{"_index":32,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["read",{"_index":247,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["recreat",{"_index":711,"title":{},"body":{"changelog.html":{}}}],["refer",{"_index":93,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["refresh",{"_index":621,"title":{},"body":{"changelog.html":{}}}],["releas",{"_index":794,"title":{},"body":{"index.html":{}}}],["reload",{"_index":789,"title":{},"body":{"index.html":{}}}],["remov",{"_index":733,"title":{},"body":{"changelog.html":{}}}],["render",{"_index":634,"title":{},"body":{"changelog.html":{}}}],["replacedefaultcolor",{"_index":431,"title":{},"body":{"modules/ChartsModule.html":{}}}],["replacedefaultcolors(defaultcolor",{"_index":437,"title":{},"body":{"modules/ChartsModule.html":{}}}],["repo",{"_index":784,"title":{},"body":{"index.html":{}}}],["resetparamschangest",{"_index":20,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["resiz",{"_index":274,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{},"changelog.html":{}}}],["restrict",{"_index":817,"title":{},"body":{"license.html":{}}}],["result",{"_index":420,"title":{},"body":{"components/ChartComponent.html":{},"modules/ChartsModule.html":{},"components/EChartComponent.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":133,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["rgb",{"_index":48,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["rgba",{"_index":49,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["right",{"_index":338,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{},"license.html":{}}}],["run",{"_index":786,"title":{},"body":{"index.html":{}}}],["s.data.foreach((d",{"_index":539,"title":{},"body":{"components/EChartComponent.html":{}}}],["s.data.length",{"_index":558,"title":{},"body":{"components/EChartComponent.html":{}}}],["s.data.some(d",{"_index":493,"title":{},"body":{"components/EChartComponent.html":{}}}],["s.label",{"_index":542,"title":{},"body":{"components/EChartComponent.html":{}}}],["s.radiu",{"_index":541,"title":{},"body":{"components/EChartComponent.html":{}}}],["s['avoidlabeloverlap",{"_index":550,"title":{},"body":{"components/EChartComponent.html":{}}}],["s['color",{"_index":556,"title":{},"body":{"components/EChartComponent.html":{}}}],["save",{"_index":757,"title":{},"body":{"index.html":{}}}],["scale",{"_index":82,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["screen",{"_index":658,"title":{},"body":{"changelog.html":{}}}],["script",{"_index":730,"title":{},"body":{"changelog.html":{}}}],["scroll",{"_index":622,"title":{},"body":{"changelog.html":{}}}],["see",{"_index":599,"title":{},"body":{"changelog.html":{}}}],["selector",{"_index":13,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["sell",{"_index":825,"title":{},"body":{"license.html":{}}}],["seri",{"_index":67,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{},"changelog.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["series.foreach(",{"_index":538,"title":{},"body":{"components/EChartComponent.html":{}}}],["series.foreach((",{"_index":555,"title":{},"body":{"components/EChartComponent.html":{}}}],["series.length",{"_index":517,"title":{},"body":{"components/EChartComponent.html":{}}}],["series.some(",{"_index":492,"title":{},"body":{"components/EChartComponent.html":{}}}],["server",{"_index":785,"title":{},"body":{"index.html":{}}}],["set",{"_index":115,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{},"changelog.html":{}}}],["shadow",{"_index":502,"title":{},"body":{"components/EChartComponent.html":{}}}],["shall",{"_index":833,"title":{},"body":{"license.html":{}}}],["show",{"_index":118,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["showperc",{"_index":568,"title":{},"body":{"components/EChartComponent.html":{}}}],["showpercentagetyp",{"_index":149,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{},"miscellaneous/typealiases.html":{}}}],["singl",{"_index":635,"title":{},"body":{"changelog.html":{}}}],["size",{"_index":708,"title":{},"body":{"changelog.html":{}}}],["small",{"_index":108,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{},"changelog.html":{}}}],["softwar",{"_index":814,"title":{},"body":{"license.html":{}}}],["solid",{"_index":449,"title":{},"body":{"components/EChartComponent.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/ChartComponent.html":{},"modules/ChartsModule.html":{},"components/EChartComponent.html":{},"index.html":{}}}],["specifi",{"_index":65,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["specifiy",{"_index":99,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["split",{"_index":612,"title":{},"body":{"changelog.html":{}}}],["splitlabel",{"_index":388,"title":{},"body":{"components/ChartComponent.html":{}}}],["splitword",{"_index":747,"title":{},"body":{"miscellaneous/functions.html":{}}}],["splitwords(text",{"_index":195,"title":{},"body":{"components/ChartComponent.html":{},"miscellaneous/functions.html":{}}}],["src/.../base.chart.t",{"_index":863,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../chart.component.t",{"_index":748,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../charts.module.t",{"_index":867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/base.chart.t",{"_index":865,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/chart.component.t",{"_index":7,"title":{},"body":{"components/ChartComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/chart.component.ts:128",{"_index":44,"title":{},"body":{"components/ChartComponent.html":{}}}],["src/chart.component.ts:136",{"_index":39,"title":{},"body":{"components/ChartComponent.html":{}}}],["src/charts.module.t",{"_index":424,"title":{},"body":{"modules/ChartsModule.html":{},"miscellaneous/variables.html":{}}}],["src/echart.component.t",{"_index":439,"title":{},"body":{"components/EChartComponent.html":{}}}],["src/echart.component.ts:47",{"_index":456,"title":{},"body":{"components/EChartComponent.html":{}}}],["standard",{"_index":600,"title":{},"body":{"changelog.html":{}}}],["start",{"_index":592,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["step",{"_index":535,"title":{},"body":{"components/EChartComponent.html":{}}}],["str",{"_index":576,"title":{},"body":{"components/EChartComponent.html":{}}}],["string",{"_index":46,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["style",{"_index":438,"title":{},"body":{"components/EChartComponent.html":{}}}],["subject",{"_index":828,"title":{},"body":{"license.html":{}}}],["sublicens",{"_index":823,"title":{},"body":{"license.html":{}}}],["substanti",{"_index":834,"title":{},"body":{"license.html":{}}}],["super(zon",{"_index":249,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["support",{"_index":666,"title":{},"body":{"changelog.html":{}}}],["tabl",{"_index":750,"title":{},"body":{"index.html":{}}}],["tan",{"_index":805,"title":{},"body":{"license.html":{}}}],["templat",{"_index":16,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{},"index.html":{}}}],["test",{"_index":790,"title":{},"body":{"index.html":{}}}],["test:watch",{"_index":792,"title":{},"body":{"index.html":{}}}],["text",{"_index":451,"title":{},"body":{"components/EChartComponent.html":{},"miscellaneous/functions.html":{}}}],["text.split",{"_index":198,"title":{},"body":{"components/ChartComponent.html":{}}}],["textshadowcolor",{"_index":547,"title":{},"body":{"components/EChartComponent.html":{}}}],["textshadowoffseti",{"_index":549,"title":{},"body":{"components/EChartComponent.html":{}}}],["this._applycolors(this.color",{"_index":281,"title":{},"body":{"components/ChartComponent.html":{}}}],["this._applyconfig",{"_index":258,"title":{},"body":{"components/ChartComponent.html":{}}}],["this._applyopt",{"_index":467,"title":{},"body":{"components/EChartComponent.html":{}}}],["this._chart",{"_index":252,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["this._chart.chartarea.bottom",{"_index":310,"title":{},"body":{"components/ChartComponent.html":{}}}],["this._chart.chartarea.left",{"_index":308,"title":{},"body":{"components/ChartComponent.html":{}}}],["this._chart.chartarea.right",{"_index":307,"title":{},"body":{"components/ChartComponent.html":{}}}],["this._chart.chartarea.top",{"_index":311,"title":{},"body":{"components/ChartComponent.html":{}}}],["this._chart.config",{"_index":305,"title":{},"body":{"components/ChartComponent.html":{}}}],["this._chart.config.data",{"_index":285,"title":{},"body":{"components/ChartComponent.html":{}}}],["this._chart.config.data.dataset",{"_index":287,"title":{},"body":{"components/ChartComponent.html":{}}}],["this._chart.destroy",{"_index":253,"title":{},"body":{"components/ChartComponent.html":{}}}],["this._chart.dispos",{"_index":469,"title":{},"body":{"components/EChartComponent.html":{}}}],["this._chart.getopt",{"_index":480,"title":{},"body":{"components/EChartComponent.html":{}}}],["this._chart.isdispos",{"_index":468,"title":{},"body":{"components/EChartComponent.html":{}}}],["this._chart.res",{"_index":477,"title":{},"body":{"components/EChartComponent.html":{}}}],["this._chart.setoption(opt",{"_index":521,"title":{},"body":{"components/EChartComponent.html":{}}}],["this._chart.upd",{"_index":288,"title":{},"body":{"components/ChartComponent.html":{}}}],["this._chartcontain",{"_index":464,"title":{},"body":{"components/EChartComponent.html":{}}}],["this._chartcontainer.nativeel",{"_index":293,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["this._checks",{"_index":273,"title":{},"body":{"components/ChartComponent.html":{}}}],["this._config.data",{"_index":325,"title":{},"body":{"components/ChartComponent.html":{}}}],["this._config.data.dataset",{"_index":326,"title":{},"body":{"components/ChartComponent.html":{}}}],["this._config.data.label",{"_index":330,"title":{},"body":{"components/ChartComponent.html":{}}}],["this._config.opt",{"_index":324,"title":{},"body":{"components/ChartComponent.html":{}}}],["this._config.options.legend",{"_index":317,"title":{},"body":{"components/ChartComponent.html":{}}}],["this._config.options.legend.display",{"_index":318,"title":{},"body":{"components/ChartComponent.html":{}}}],["this._config.options.legend.posit",{"_index":341,"title":{},"body":{"components/ChartComponent.html":{}}}],["this._config.options.scal",{"_index":350,"title":{},"body":{"components/ChartComponent.html":{}}}],["this._config.options.scales.xax",{"_index":361,"title":{},"body":{"components/ChartComponent.html":{}}}],["this._config.options.scales.yax",{"_index":360,"title":{},"body":{"components/ChartComponent.html":{}}}],["this._config.options.tooltip",{"_index":363,"title":{},"body":{"components/ChartComponent.html":{}}}],["this._config.options.tooltips.callback",{"_index":391,"title":{},"body":{"components/ChartComponent.html":{}}}],["this._config.options.tooltips.callbacks.afterlabel",{"_index":395,"title":{},"body":{"components/ChartComponent.html":{}}}],["this._config.options.tooltips.callbacks.label",{"_index":392,"title":{},"body":{"components/ChartComponent.html":{}}}],["this._config.options.tooltips.callbacks.titl",{"_index":396,"title":{},"body":{"components/ChartComponent.html":{}}}],["this._config.options.tooltips.intersect",{"_index":379,"title":{},"body":{"components/ChartComponent.html":{}}}],["this._config.options.tooltips.mod",{"_index":378,"title":{},"body":{"components/ChartComponent.html":{}}}],["this._config.typ",{"_index":265,"title":{},"body":{"components/ChartComponent.html":{}}}],["this._createchart",{"_index":465,"title":{},"body":{"components/EChartComponent.html":{}}}],["this._createnewchart(cfg",{"_index":284,"title":{},"body":{"components/ChartComponent.html":{}}}],["this._definecolors(seri",{"_index":518,"title":{},"body":{"components/EChartComponent.html":{}}}],["this._definepieshape(seri",{"_index":515,"title":{},"body":{"components/EChartComponent.html":{}}}],["this._echartsopt",{"_index":508,"title":{},"body":{"components/EChartComponent.html":{}}}],["this._echartsoptions.legend",{"_index":478,"title":{},"body":{"components/EChartComponent.html":{}}}],["this._echartsoptions.tooltip['trigg",{"_index":513,"title":{},"body":{"components/EChartComponent.html":{}}}],["this._echartsoptions.xaxi",{"_index":511,"title":{},"body":{"components/EChartComponent.html":{}}}],["this._echartsoptions.yaxi",{"_index":509,"title":{},"body":{"components/EChartComponent.html":{}}}],["this._formattooltip.bind(thi",{"_index":504,"title":{},"body":{"components/EChartComponent.html":{}}}],["this._generatelegendopt",{"_index":516,"title":{},"body":{"components/EChartComponent.html":{}}}],["this._isyaxisallnumbers(d.data",{"_index":359,"title":{},"body":{"components/ChartComponent.html":{}}}],["this._mapdataitem(d",{"_index":490,"title":{},"body":{"components/EChartComponent.html":{}}}],["this._prevconfig",{"_index":276,"title":{},"body":{"components/ChartComponent.html":{}}}],["this._prevconfig.data",{"_index":261,"title":{},"body":{"components/ChartComponent.html":{}}}],["this._prevconfig.typ",{"_index":266,"title":{},"body":{"components/ChartComponent.html":{}}}],["this._recalculates",{"_index":466,"title":{},"body":{"components/EChartComponent.html":{}}}],["this._refresh(configchang",{"_index":272,"title":{},"body":{"components/ChartComponent.html":{}}}],["this._refresh(tru",{"_index":319,"title":{},"body":{"components/ChartComponent.html":{}}}],["this._typemap[maintyp",{"_index":514,"title":{},"body":{"components/EChartComponent.html":{}}}],["this._typemap[v.typ",{"_index":485,"title":{},"body":{"components/EChartComponent.html":{}}}],["this._zone.runoutsideangular",{"_index":290,"title":{},"body":{"components/ChartComponent.html":{}}}],["this.colorsfor",{"_index":282,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["this.curr",{"_index":351,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["this.digit",{"_index":394,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["this.isparamchanged('color",{"_index":268,"title":{},"body":{"components/ChartComponent.html":{}}}],["this.isparamchanged('colorsfor",{"_index":267,"title":{},"body":{"components/ChartComponent.html":{}}}],["this.isparamchanged('curr",{"_index":270,"title":{},"body":{"components/ChartComponent.html":{}}}],["this.isparamchanged('percentag",{"_index":269,"title":{},"body":{"components/ChartComponent.html":{}}}],["this.isparamchanged('timeformat",{"_index":271,"title":{},"body":{"components/ChartComponent.html":{}}}],["this.label",{"_index":496,"title":{},"body":{"components/EChartComponent.html":{}}}],["this.legend",{"_index":314,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["this.opt",{"_index":398,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["this.paramschang",{"_index":257,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["this.percentag",{"_index":393,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["this.plugin",{"_index":301,"title":{},"body":{"components/ChartComponent.html":{}}}],["this.ratio",{"_index":334,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["this.resetparamschangest",{"_index":278,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["this.timeformat",{"_index":374,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["this.typ",{"_index":323,"title":{},"body":{"components/ChartComponent.html":{}}}],["through",{"_index":755,"title":{},"body":{"index.html":{}}}],["tick",{"_index":355,"title":{},"body":{"components/ChartComponent.html":{}}}],["time",{"_index":127,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["timeaxi",{"_index":497,"title":{},"body":{"components/EChartComponent.html":{}}}],["timeformat",{"_index":33,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["timescal",{"_index":718,"title":{},"body":{"changelog.html":{}}}],["timescaleconfigur",{"_index":362,"title":{},"body":{"components/ChartComponent.html":{}}}],["titl",{"_index":211,"title":{},"body":{"components/ChartComponent.html":{},"changelog.html":{}}}],["tooltip",{"_index":86,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{},"changelog.html":{}}}],["tooltip.formatt",{"_index":503,"title":{},"body":{"components/EChartComponent.html":{}}}],["tooltipformat",{"_index":373,"title":{},"body":{"components/ChartComponent.html":{}}}],["tooltipitem",{"_index":166,"title":{},"body":{"components/ChartComponent.html":{}}}],["tooltipitems.length",{"_index":215,"title":{},"body":{"components/ChartComponent.html":{}}}],["tooltipitems[0",{"_index":217,"title":{},"body":{"components/ChartComponent.html":{}}}],["tootlip",{"_index":609,"title":{},"body":{"changelog.html":{}}}],["top",{"_index":337,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["tort",{"_index":854,"title":{},"body":{"license.html":{}}}],["total",{"_index":186,"title":{},"body":{"components/ChartComponent.html":{}}}],["total).tofixed(2",{"_index":193,"title":{},"body":{"components/ChartComponent.html":{}}}],["tree",{"_index":5,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["true",{"_index":259,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["tune",{"_index":724,"title":{},"body":{"changelog.html":{}}}],["turn",{"_index":75,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{},"changelog.html":{}}}],["type",{"_index":34,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealias",{"_index":861,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["undefin",{"_index":160,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["underli",{"_index":661,"title":{},"body":{"changelog.html":{}}}],["updat",{"_index":725,"title":{},"body":{"changelog.html":{}}}],["upgrad",{"_index":639,"title":{},"body":{"changelog.html":{}}}],["us",{"_index":70,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["usag",{"_index":95,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{},"index.html":{}}}],["v",{"_index":569,"title":{},"body":{"components/EChartComponent.html":{}}}],["v.data",{"_index":488,"title":{},"body":{"components/EChartComponent.html":{}}}],["v.label",{"_index":484,"title":{},"body":{"components/EChartComponent.html":{}}}],["v.name",{"_index":482,"title":{},"body":{"components/EChartComponent.html":{}}}],["v.type",{"_index":487,"title":{},"body":{"components/EChartComponent.html":{}}}],["val",{"_index":357,"title":{},"body":{"components/ChartComponent.html":{}}}],["valaxi",{"_index":500,"title":{},"body":{"components/EChartComponent.html":{}}}],["valaxis[0].axislabel",{"_index":505,"title":{},"body":{"components/EChartComponent.html":{}}}],["valu",{"_index":76,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":414,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["variabl",{"_index":866,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":601,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["vertic",{"_index":589,"title":{},"body":{"components/EChartComponent.html":{}}}],["via",{"_index":77,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{},"index.html":{}}}],["view",{"_index":767,"title":{},"body":{"index.html":{}}}],["viewchild",{"_index":139,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["viewchild('chartcontain",{"_index":246,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["viewencapsul",{"_index":457,"title":{},"body":{"components/EChartComponent.html":{}}}],["viewencapsulation.non",{"_index":441,"title":{},"body":{"components/EChartComponent.html":{}}}],["void",{"_index":135,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["w",{"_index":201,"title":{},"body":{"components/ChartComponent.html":{}}}],["warn",{"_index":716,"title":{},"body":{"changelog.html":{}}}],["warranti",{"_index":836,"title":{},"body":{"license.html":{}}}],["well",{"_index":85,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["whether",{"_index":117,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{},"license.html":{}}}],["white",{"_index":450,"title":{},"body":{"components/EChartComponent.html":{}}}],["wide",{"_index":680,"title":{},"body":{"changelog.html":{}}}],["width",{"_index":306,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["without",{"_index":768,"title":{},"body":{"index.html":{},"license.html":{}}}],["word",{"_index":197,"title":{},"body":{"components/ChartComponent.html":{}}}],["word.length",{"_index":202,"title":{},"body":{"components/ChartComponent.html":{}}}],["words.push(word",{"_index":203,"title":{},"body":{"components/ChartComponent.html":{}}}],["wrong",{"_index":384,"title":{},"body":{"components/ChartComponent.html":{}}}],["x",{"_index":125,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}],["xlabel",{"_index":209,"title":{},"body":{"components/ChartComponent.html":{}}}],["y",{"_index":227,"title":{},"body":{"components/ChartComponent.html":{}}}],["yarn",{"_index":779,"title":{},"body":{"index.html":{}}}],["zhendong",{"_index":804,"title":{},"body":{"license.html":{}}}],["zone",{"_index":43,"title":{},"body":{"components/ChartComponent.html":{},"components/EChartComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/ChartComponent.html":{"url":"components/ChartComponent.html","title":"component - ChartComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ChartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/chart.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseChart\n    \n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ezy-chart\n            \n\n\n\n            \n                template\n                \n\t\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isParamChanged\n                            \n                            \n                                resetParamsChangeState\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                plugins\n                            \n                            \n                                colors\n                            \n                            \n                                colorsFor\n                            \n                            \n                                currency\n                            \n                            \n                                datasets\n                            \n                            \n                                digits\n                            \n                            \n                                labels\n                            \n                            \n                                legend\n                            \n                            \n                                options\n                            \n                            \n                                percentage\n                            \n                            \n                                ratio\n                            \n                            \n                                timeFormat\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/chart.component.ts:136\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        zone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        plugins\n                    \n                    \n                            \n                            Type :    any[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/chart.component.ts:128\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        colors\n                    \n                    \n                        An array of strings in hex, rgb, or rgba format, to define the base colors of datasets, or the data points of each dataset. If this\nproperty is absent, or the colors defined are less than the number of datasets (or the data points of each dataset), the missing colors will\nbe assigned from the defult palette\n\n                    \n                \n                            \n                                \n                                    Inherited from     BaseChart\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseChart:116\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        colorsFor\n                    \n                    \n                        Specify what the colors (either defined or generated) are for.\n\n'series' - each color corresponds to a dataset\n'data' - each color corresponds to a data point of each dataset\n'auto' - use 'series' for chart types 'bar', 'horizontalBar' and 'line'; and use 'data' for other chart types\n'none' - turn off the color generator. Use this value if colors are specified via #options\n\n\n                    \n                \n                            \n                                \n                                    Inherited from     BaseChart\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseChart:134\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        currency\n                    \n                    \n                        An ISO 4217 currency code. If specified, it will be used to format the scales of the main axis, as well as the values in the tooltips.\n\n                    \n                \n                            \n                                \n                                    Inherited from     BaseChart\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseChart:179\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        datasets\n                    \n                    \n                        An array of Chart.ChartDataSets, corresponding to Chart.ChartConfiguration.data.datasets\n\n                    \n                \n                            \n                                \n                                    Inherited from     BaseChart\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseChart:101\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        digits\n                    \n                    \n                        The digit info of the output template, used to format numbers in scales. Please refer to https://angular.io/api/common/DecimalPipe for its usage.\n\n                    \n                \n                            \n                                \n                                    Inherited from     BaseChart\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseChart:192\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labels\n                    \n                    \n                        An array of strings, corresponding to Chart.ChartConfiguration.data.labels\n\n                    \n                \n                            \n                                \n                                    Inherited from     BaseChart\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseChart:74\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        legend\n                    \n                    \n                        Specifiy how to display the legend\n\nif the value is a boolean, it corresponds to Chart.ChartConfiguration.options.legend.display\nif the value is 'auto', the legend will be arranged automatically. For example, the legend will be hidden if the chart area is too small\nif the value is of type Chart.ChartLegendOptions, it corresponds to Chart.ChartConfiguration.options.legend.position\nif the value is of type Chart.ChartLegendOptions, it corresponds to Chart.ChartConfiguration.options.legend\n\n\n                    \n                \n                            \n                                \n                                    Inherited from     BaseChart\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseChart:166\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                    \n                        Corresponds to Chart.ChartConfiguration.options. This overrides any other settings.\n\n                    \n                \n                            \n                                \n                                    Inherited from     BaseChart\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseChart:205\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        percentage\n                    \n                    \n                        Specify whether to show the overall percentage values in the popover tooltips.\n\n                    \n                \n                            \n                                \n                                    Inherited from     BaseChart\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseChart:231\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ratio\n                    \n                    \n                        The aspect ratio of the chart\n\n                    \n                \n                            \n                                \n                                    Inherited from     BaseChart\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseChart:148\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        timeFormat\n                    \n                    \n                        A moment.js format string. When specified, the X axis will be configured with time scales, and this value will be used to format the tooltips.\n\n                    \n                \n                            \n                                \n                                    Inherited from     BaseChart\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseChart:218\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                    \n                        The chart type, corresponding to Chart.ChartConfiguration.type\n\n                    \n                \n                            \n                                \n                                    Inherited from     BaseChart\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseChart:88\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isParamChanged\n                            \n                            \n                        \n                    \n                \n                \n                    \nisParamChanged(property: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseChart\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseChart:243\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetParamsChangeState\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetParamsChangeState()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseChart\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseChart:247\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, ChangeDetectionStrategy, Input, ElementRef, ViewChild, NgZone } from '@angular/core';\nimport { generateColorsBySeries, generateColorsByDataPoints } from './color.helpers';\nimport { DecimalPipe } from '@angular/common';\nimport * as _ from 'lodash';\nimport * as moment from 'moment';\nimport { BaseChart, ShowPercentageType, ColorsForType, formatMoney, formatScale } from './base.chart';\n\n/**\n * @internal\n */\nconst MULTI_SERIES_BY_DEFAULT = ['line', 'bar', 'horizontalBar', 'radar'];\n\n/**\n * @internal\n */\nfunction getTooltipLabelCallBack(\n\tcurrency: string | undefined,\n\tpercentage: ShowPercentageType,\n\tdigitInfo: string | undefined,\n\ttype: 'label' | 'afterLabel' | 'both'\n): Chart.ChartTooltipCallback['label'] | Chart.ChartTooltipCallback['afterLabel'] {\n\treturn (tooltipItem, data) => {\n\t\tconst labels: any[] = [];\n\t\tconst ds = data.datasets as Chart.ChartDataSets[];\n\t\tconst label = ds.length > 1 ? ds[tooltipItem.datasetIndex || 0].label || '' : '';\n\t\tif (label && type === 'both') {\n\t\t\tlabels.push(label);\n\t\t}\n\t\tif (type === 'label') {\n\t\t\treturn label;\n\t\t}\n\t\tconst dsData: Array = ds[tooltipItem.datasetIndex || 0].data || [];\n\t\tconst point = dsData[tooltipItem.index || 0];\n\t\tconst value = _.isNumber(point) ? point : point.y;\n\n\t\tif (percentage !== 'only') {\n\t\t\tif (currency) {\n\t\t\t\tlabels.push(formatMoney(value, currency, digitInfo));\n\t\t\t} else if (digitInfo && _.isNumber(value)) {\n\t\t\t\tlabels.push(new DecimalPipe(moment.locale()).transform(value, digitInfo));\n\t\t\t} else {\n\t\t\t\tlabels.push(tooltipItem.yLabel || value);\n\t\t\t}\n\t\t}\n\n\t\tif (percentage) {\n\t\t\tconst perc = _.isNumber(value) ? value : 0;\n\t\t\tconst total = _.sumBy(dsData, d => (_.isNumber(d) ? d : (d.y as number)));\n\t\t\tlabels.push(`${total ? ((perc * 100) / total).toFixed(2) : 0}%`);\n\t\t}\n\t\treturn labels.join(' : ');\n\t};\n}\n\nfunction splitWords(text: string, maxLength: number) {\n\tconst words: string[] = [];\n\tlet word: string = '';\n\ttext.split(' ').forEach(w => {\n\t\tword = _.join([word, w], ' ');\n\t\tif (word.length > maxLength) {\n\t\t\twords.push(word);\n\t\t\tword = '';\n\t\t}\n\t});\n\tif (word) {\n\t\twords.push(word);\n\t}\n\treturn words;\n}\n\n/**\n * @internal\n */\nexport function getTooltipTitleCallBack(horizontal?: boolean): Chart.ChartTooltipCallback['title'] {\n\treturn (tooltipItems, data) => {\n\t\t// Pick first xLabel for now\n\t\tlet title = '';\n\t\tconst labels = data.labels || [];\n\t\tconst labelCount = labels.length;\n\n\t\tif (tooltipItems.length > 0) {\n\t\t\tconst item = tooltipItems[0];\n\n\t\t\tif (item.xLabel || (horizontal && item.yLabel)) {\n\t\t\t\ttitle = (horizontal ? item.yLabel : item.xLabel) || '';\n\t\t\t} else if ((labelCount > 0 && item.index) || 0  {\n\t\t\tconst legend = (chartInstance as any).legend;\n\t\t\tconst canvas = chartInstance.canvas;\n\t\t\tconst x = chartEvent.x;\n\t\t\tconst y = chartEvent.y;\n\t\t\tlet cursorStyle = 'default';\n\t\t\tif (x = legend.left && y = legend.top) {\n\t\t\t\tfor (const box of legend.legendHitBoxes) {\n\t\t\t\t\tif (x = box.left && y = box.top) {\n\t\t\t\t\t\tcursorStyle = 'pointer';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (canvas) {\n\t\t\t\tcanvas.style.cursor = cursorStyle;\n\t\t\t}\n\t\t}\n\t});\n}\n\n@Component({\n\tselector: 'ezy-chart',\n\ttemplate: `\n\t\t\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ChartComponent extends BaseChart {\n\t@Input()\n\tplugins: any[];\n\n\tprivate _config: Chart.ChartConfiguration = {};\n\tprivate _prevConfig: Chart.ChartConfiguration = {};\n\n\tprivate _chart: Chart;\n\n\t@ViewChild('chartContainer', { read: ElementRef })\n\tprivate _chartContainer: ElementRef;\n\n\tconstructor(zone: NgZone) {\n\t\tsuper(zone);\n\t}\n\n\tprotected _onDestroy() {\n\t\tif (this._chart) {\n\t\t\tthis._chart.destroy();\n\t\t}\n\t}\n\n\tprotected _checkUpdate(resized: boolean) {\n\t\tlet dataOrParamsChanged: boolean = false;\n\t\tif (this.paramsChanged) {\n\t\t\tthis._applyConfig();\n\t\t\tdataOrParamsChanged = true;\n\t\t}\n\n\t\tdataOrParamsChanged = dataOrParamsChanged || !_.isEqual(this._config.data, this._prevConfig.data);\n\t\tlet configChanged: boolean =\n\t\t\t!_.isEqual(JSON.stringify(this._config.options), JSON.stringify(this._prevConfig.options)) ||\n\t\t\tthis._config.type !== this._prevConfig.type;\n\n\t\tconfigChanged = configChanged || this.isParamChanged('colorsFor');\n\n\t\tconfigChanged = configChanged || this.isParamChanged('colors');\n\t\tconfigChanged = configChanged || this.isParamChanged('percentage');\n\t\tconfigChanged = configChanged || this.isParamChanged('currency');\n\t\tconfigChanged = configChanged || this.isParamChanged('timeFormat');\n\n\t\tif (dataOrParamsChanged || configChanged) {\n\t\t\tthis._refresh(configChanged);\n\t\t\tthis._checkSize();\n\t\t} else if (resized) {\n\t\t\tthis._checkSize();\n\t\t}\n\t}\n\n\tprivate _refresh(configChanged: boolean) {\n\t\tthis._prevConfig = _.cloneDeep(this._config);\n\t\tthis.resetParamsChangeState();\n\n\t\tif (configChanged || !this._chart) {\n\t\t\tif (this._chart) {\n\t\t\t\tthis._chart.destroy();\n\t\t\t}\n\t\t\tconst cfg = _.cloneDeep(this._prevConfig);\n\t\t\tthis._applyColors(this.colors || [], this.colorsFor || 'auto', (cfg.data || {}).datasets || []);\n\t\t\tthis._createNewChart(cfg);\n\t\t} else {\n\t\t\tthis._chart.config.data = _.cloneDeep(this._config.data || {});\n\t\t\tthis._applyColors(this.colors || [], this.colorsFor || 'auto', this._chart.config.data.datasets || []);\n\t\t\tthis._chart.update();\n\t\t}\n\t}\n\n\tprivate _createNewChart(cfg: Chart.ChartConfiguration) {\n\t\tthis._zone.runOutsideAngular(() => {\n\t\t\tconst container: HTMLElement = this._chartContainer.nativeElement;\n\t\t\tconst nodes = container.getElementsByTagName('canvas');\n\t\t\tif (nodes.length) {\n\t\t\t\tcontainer.removeChild(nodes.item(0));\n\t\t\t}\n\t\t\tconst canvas = document.createElement('canvas');\n\t\t\tcontainer.appendChild(canvas);\n\t\t\t(cfg as any).plugins = this.plugins;\n\t\t\tthis._chart = new Chart(canvas, cfg);\n\t\t});\n\t}\n\n\tprivate _checkSize() {\n\t\tif (!this._chart) {\n\t\t\treturn;\n\t\t}\n\t\tconst cfg = this._chart.config;\n\t\tconst width = this._chart.chartArea.right - this._chart.chartArea.left;\n\t\tconst height = this._chart.chartArea.bottom - this._chart.chartArea.top;\n\t\tconst legendOpt = (cfg.options || {}).legend || {};\n\t\tif ((this.legend || 'auto') === 'auto') {\n\t\t\tif ((width  150 &&\n\t\t\t\theight > 150 &&\n\t\t\t\t!legendOpt.display &&\n\t\t\t\tthis._config.options.legend &&\n\t\t\t\tthis._config.options.legend.display\n\t\t\t) {\n\t\t\t\tthis._refresh(true);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _applyConfig() {\n\t\tconst multiType: boolean = MULTI_SERIES_BY_DEFAULT.indexOf(this.type || 'bar') >= 0;\n\n\t\tthis._config.type = this.type || 'bar';\n\t\tthis._config.options = this._config.options || {};\n\t\tthis._config.options.legend = this._config.options.legend || {};\n\t\tthis._config.data = this._config.data || {};\n\t\tconst ds: Chart.ChartDataSets[] = (this._config.data.datasets = _.cloneDeep(this.datasets || []));\n\n\t\tif (!ds.some(d => (d.label ? true : false))) {\n\t\t\tif (multiType) {\n\t\t\t\tthis._config.options.legend.display = false;\n\t\t\t}\n\t\t}\n\t\tconst labels = (this._config.data.labels = _.cloneDeep(this.labels || []));\n\n\t\t_.set(this._config.options || {}, 'aspectRatio', this.ratio || 2);\n\n\t\tconst legend = this.legend === false ? false : this.legend || 'auto';\n\t\tif (_.isString(legend) && ['top', 'right', 'bottom', 'left'].indexOf(legend) >= 0) {\n\t\t\tthis._config.options.legend.position = legend as Chart.PositionType;\n\t\t} else if (_.isBoolean(legend)) {\n\t\t\tthis._config.options.legend.display = legend;\n\t\t} else if (_.isObject(legend)) {\n\t\t\tthis._config.options.legend = _.cloneDeep(legend) as Chart.ChartLegendOptions;\n\t\t} else if (legend === 'auto') {\n\t\t\tconst multiPoints: boolean = ds.every(d => (d.data || []).length > 1);\n\t\t\tthis._config.options.legend.display = (multiType && ds.length > 1) || (multiPoints && !multiType);\n\t\t\tthis._config.options.legend.position = multiType && this.type !== 'radar' ? 'top' : 'right';\n\t\t}\n\n\t\tthis._config.options.scales = {};\n\t\tif (this.currency) {\n\t\t\tconst curr = this.currency;\n\t\t\tif (multiType) {\n\t\t\t\tconst axes: Chart.CommonAxe = {\n\t\t\t\t\tticks: { callback: val => formatScale(val, curr) }\n\t\t\t\t};\n\t\t\t\tif (ds.every(d => this._isYAxisAllNumbers(d.data || []))) {\n\t\t\t\t\tif (this.type !== 'horizontalBar') {\n\t\t\t\t\t\tthis._config.options.scales.yAxes = [axes];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._config.options.scales.xAxes = [axes];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet timeScaleConfigured: boolean = false;\n\n\t\tthis._config.options.tooltips = this._config.options.tooltips || {};\n\n\t\tif (this.type === 'line') {\n\t\t\tconst isTimeScale = ds.every(d =>\n\t\t\t\t((d.data as Chart.ChartPoint[]) || []).every(item => (item.x ? moment(item.x).isValid() : false))\n\t\t\t);\n\t\t\tif (isTimeScale) {\n\t\t\t\tthis._config.options.scales = this._config.options.scales || {};\n\t\t\t\tconst minTime = _.min(_.flatMap(ds, d => d.data as Chart.ChartPoint[]).map(p => moment(p.x)));\n\t\t\t\tds.every(d =>\n\t\t\t\t\t((d.data as Chart.ChartPoint[]) || []).every(item => (item.x ? moment(item.x).isValid() : false))\n\t\t\t\t);\n\t\t\t\tthis._config.options.scales.xAxes = [\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'time',\n\t\t\t\t\t\ttime: {\n\t\t\t\t\t\t\ttooltipFormat: this.timeFormat || 'L',\n\t\t\t\t\t\t\tmin: minTime ? minTime.toISOString() : undefined\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t];\n\t\t\t\ttimeScaleConfigured = true;\n\t\t\t}\n\t\t\tthis._config.options.tooltips.mode = 'index';\n\t\t\tthis._config.options.tooltips.intersect = false;\n\t\t} else {\n\t\t\tthis._config.options.tooltips.mode = 'nearest';\n\t\t\tthis._config.options.tooltips.intersect = true;\n\t\t}\n\n\t\tif (ds.length === 0 || (ds[0].data || []).length === 0) {\n\t\t\tconsole.warn('ezy-chart: empty datasets. ');\n\t\t} else if ((ds[0].data || []).length > labels.length && !timeScaleConfigured) {\n\t\t\tconsole.warn('ezy-chart: wrong number of labels. ');\n\t\t}\n\n\t\tif (_.isEmpty(this._config.options.scales)) {\n\t\t\tthis._config.options = _.pickBy(this._config.options, (val, key) => key !== 'scales');\n\t\t}\n\n\t\tconst splitLabel: boolean = (this.type === 'pie' || this.type === 'doughnut') && ds.length > 1;\n\t\tthis._config.options.tooltips.callbacks = this._config.options.tooltips.callbacks || {};\n\t\tthis._config.options.tooltips.callbacks.label = getTooltipLabelCallBack(\n\t\t\tthis.currency,\n\t\t\tthis.percentage || false,\n\t\t\tthis.digits,\n\t\t\tsplitLabel ? 'label' : 'both'\n\t\t);\n\t\tif (splitLabel) {\n\t\t\tthis._config.options.tooltips.callbacks.afterLabel = getTooltipLabelCallBack(\n\t\t\t\tthis.currency,\n\t\t\t\tthis.percentage || false,\n\t\t\t\tthis.digits,\n\t\t\t\t'afterLabel'\n\t\t\t);\n\t\t} else {\n\t\t\tthis._config.options.tooltips.callbacks.afterLabel = () => '';\n\t\t}\n\t\tthis._config.options.tooltips.callbacks.title = getTooltipTitleCallBack(this.type === 'horizontalBar');\n\n\t\tif (this.options) {\n\t\t\t_.merge(this._config.options, this.options);\n\t\t}\n\t}\n\n\tprivate _isYAxisAllNumbers(data: Array): boolean {\n\t\treturn data.every(d => !d || _.isNumber(d) || _.isNumber(d.y));\n\t}\n\n\tprivate _applyColors(colors: string[], colorsFor: ColorsForType, datasets: Chart.ChartDataSets[]) {\n\t\tif (colorsFor === 'auto') {\n\t\t\tif (MULTI_SERIES_BY_DEFAULT.indexOf(this.type || 'bar') >= 0) {\n\t\t\t\tcolorsFor = 'series';\n\t\t\t} else {\n\t\t\t\tcolorsFor = 'data';\n\t\t\t}\n\t\t}\n\n\t\tif (colorsFor === 'series') {\n\t\t\tconst colorGroups = generateColorsBySeries(colors, datasets.length, this.type || 'bar');\n\t\t\t_.merge(datasets, colorGroups);\n\t\t} else if (colorsFor === 'data') {\n\t\t\tfor (const ds of datasets) {\n\t\t\t\tconst colorGroup = generateColorsByDataPoints(colors, (ds.data || []).length, this.type || 'bar');\n\t\t\t\t_.merge(ds, colorGroup);\n\t\t\t}\n\t\t}\n\t}\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t'\n    var COMPONENTS = [{'name': 'ChartComponent', 'selector': 'ezy-chart'},{'name': 'EChartComponent', 'selector': 'ezy-echart'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ChartsModule.html":{"url":"modules/ChartsModule.html","title":"module - ChartsModule","body":"\n                   \n\n\n\n\n    Modules\n    ChartsModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/charts.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ChartComponent\n                        \n                        \n                            EChartComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ChartComponent\n                        \n                        \n                            EChartComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule, InjectionToken, Inject, Optional } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ChartComponent } from './chart.component';\nimport { replaceDefaultColors } from './color.helpers';\nimport { EChartComponent } from './echart.component';\n\nexport const CHART_DEFAULT_COLORS: InjectionToken = new InjectionToken(\n\t'ezy-chart-default-colours'\n);\n\n@NgModule({\n\tdeclarations: [ChartComponent, EChartComponent],\n\timports: [CommonModule],\n\texports: [ChartComponent, EChartComponent]\n})\nexport class ChartsModule {\n\tconstructor(\n\t\t@Optional()\n\t\t@Inject(CHART_DEFAULT_COLORS)\n\t\tdefaultColors: number[][]\n\t) {\n\t\tif (defaultColors) {\n\t\t\treplaceDefaultColors(defaultColors);\n\t\t}\n\t}\n}\n\nexport { ChartComponent, EChartComponent };\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EChartComponent.html":{"url":"components/EChartComponent.html","title":"component - EChartComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EChartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/echart.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseChart\n    \n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                ezy-echart\n            \n\n\n            \n                styles\n                \n\t\t\t.ezy-echart-series-indicator {\n\t\t\t\tdisplay: inline-block;\n\t\t\t\tborder-radius: 10px;\n\t\t\t\tborder-width: 1px;\n\t\t\t\tborder-style: solid;\n\t\t\t\tborder-color: white;\n\t\t\t\twidth: 10px;\n\t\t\t\theight: 10px;\n\t\t\t}\n\t\t\t.ezy-echart-tooltip-item {\n\t\t\t\ttext-indent: -13px;\n\t\t\t\tpadding-left: 13px;\n\t\t\t}\n\t\t\n            \n\n            \n                template\n                \n\t\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isParamChanged\n                            \n                            \n                                resetParamsChangeState\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                colors\n                            \n                            \n                                colorsFor\n                            \n                            \n                                currency\n                            \n                            \n                                datasets\n                            \n                            \n                                digits\n                            \n                            \n                                labels\n                            \n                            \n                                legend\n                            \n                            \n                                options\n                            \n                            \n                                percentage\n                            \n                            \n                                ratio\n                            \n                            \n                                timeFormat\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/echart.component.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        zone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        colors\n                    \n                    \n                        An array of strings in hex, rgb, or rgba format, to define the base colors of datasets, or the data points of each dataset. If this\nproperty is absent, or the colors defined are less than the number of datasets (or the data points of each dataset), the missing colors will\nbe assigned from the defult palette\n\n                    \n                \n                            \n                                \n                                    Inherited from     BaseChart\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseChart:116\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        colorsFor\n                    \n                    \n                        Specify what the colors (either defined or generated) are for.\n\n'series' - each color corresponds to a dataset\n'data' - each color corresponds to a data point of each dataset\n'auto' - use 'series' for chart types 'bar', 'horizontalBar' and 'line'; and use 'data' for other chart types\n'none' - turn off the color generator. Use this value if colors are specified via #options\n\n\n                    \n                \n                            \n                                \n                                    Inherited from     BaseChart\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseChart:134\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        currency\n                    \n                    \n                        An ISO 4217 currency code. If specified, it will be used to format the scales of the main axis, as well as the values in the tooltips.\n\n                    \n                \n                            \n                                \n                                    Inherited from     BaseChart\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseChart:179\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        datasets\n                    \n                    \n                        An array of Chart.ChartDataSets, corresponding to Chart.ChartConfiguration.data.datasets\n\n                    \n                \n                            \n                                \n                                    Inherited from     BaseChart\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseChart:101\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        digits\n                    \n                    \n                        The digit info of the output template, used to format numbers in scales. Please refer to https://angular.io/api/common/DecimalPipe for its usage.\n\n                    \n                \n                            \n                                \n                                    Inherited from     BaseChart\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseChart:192\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labels\n                    \n                    \n                        An array of strings, corresponding to Chart.ChartConfiguration.data.labels\n\n                    \n                \n                            \n                                \n                                    Inherited from     BaseChart\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseChart:74\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        legend\n                    \n                    \n                        Specifiy how to display the legend\n\nif the value is a boolean, it corresponds to Chart.ChartConfiguration.options.legend.display\nif the value is 'auto', the legend will be arranged automatically. For example, the legend will be hidden if the chart area is too small\nif the value is of type Chart.ChartLegendOptions, it corresponds to Chart.ChartConfiguration.options.legend.position\nif the value is of type Chart.ChartLegendOptions, it corresponds to Chart.ChartConfiguration.options.legend\n\n\n                    \n                \n                            \n                                \n                                    Inherited from     BaseChart\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseChart:166\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                    \n                        Corresponds to Chart.ChartConfiguration.options. This overrides any other settings.\n\n                    \n                \n                            \n                                \n                                    Inherited from     BaseChart\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseChart:205\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        percentage\n                    \n                    \n                        Specify whether to show the overall percentage values in the popover tooltips.\n\n                    \n                \n                            \n                                \n                                    Inherited from     BaseChart\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseChart:231\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ratio\n                    \n                    \n                        The aspect ratio of the chart\n\n                    \n                \n                            \n                                \n                                    Inherited from     BaseChart\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseChart:148\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        timeFormat\n                    \n                    \n                        A moment.js format string. When specified, the X axis will be configured with time scales, and this value will be used to format the tooltips.\n\n                    \n                \n                            \n                                \n                                    Inherited from     BaseChart\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseChart:218\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                    \n                        The chart type, corresponding to Chart.ChartConfiguration.type\n\n                    \n                \n                            \n                                \n                                    Inherited from     BaseChart\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseChart:88\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isParamChanged\n                            \n                            \n                        \n                    \n                \n                \n                    \nisParamChanged(property: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseChart\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseChart:243\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetParamsChangeState\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetParamsChangeState()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseChart\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseChart:247\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { BaseChart, formatScale, formatMoney, ShowPercentageType } from './base.chart';\n\nimport { Component, ChangeDetectionStrategy, NgZone, ViewChild, ElementRef, ViewEncapsulation } from '@angular/core';\nimport * as _ from 'lodash';\nimport { generateColorsAsStrings } from './color.helpers';\nimport { DecimalPipe } from '@angular/common';\nimport * as moment from 'moment';\n\n@Component({\n\tselector: 'ezy-echart',\n\ttemplate: `\n\t\t\n\t`,\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tencapsulation: ViewEncapsulation.None,\n\tstyles: [\n\t\t`\n\t\t\t.ezy-echart-series-indicator {\n\t\t\t\tdisplay: inline-block;\n\t\t\t\tborder-radius: 10px;\n\t\t\t\tborder-width: 1px;\n\t\t\t\tborder-style: solid;\n\t\t\t\tborder-color: white;\n\t\t\t\twidth: 10px;\n\t\t\t\theight: 10px;\n\t\t\t}\n\t\t\t.ezy-echart-tooltip-item {\n\t\t\t\ttext-indent: -13px;\n\t\t\t\tpadding-left: 13px;\n\t\t\t}\n\t\t`\n\t]\n})\nexport class EChartComponent extends BaseChart {\n\t@ViewChild('chartContainer', { read: ElementRef })\n\tprivate _chartContainer: ElementRef;\n\n\tprivate _chart: echarts.ECharts;\n\tprivate _echartsOptions: echarts.EChartOption = {};\n\n\tprivate _typeMap = {\n\t\tbar: 'bar',\n\t\thorizontalBar: 'bar',\n\t\tdoughnut: 'pie',\n\t\tpie: 'pie',\n\t\tline: 'line'\n\t};\n\n\tconstructor(zone: NgZone) {\n\t\tsuper(zone);\n\t}\n\n\tprotected async _checkUpdate(resized: boolean) {\n\t\tif (this._chartContainer && !this._chart) {\n\t\t\tthis._createChart();\n\t\t} else if (resized && !this.paramsChanged) {\n\t\t\tthis._recalculateSize();\n\t\t}\n\n\t\tif (this.paramsChanged) {\n\t\t\tthis._applyOptions();\n\t\t\tthis.resetParamsChangeState();\n\t\t\tthis._recalculateSize();\n\t\t}\n\t}\n\n\tprotected _onDestroy() {\n\t\tif (this._chart && !this._chart.isDisposed()) {\n\t\t\tthis._chart.dispose();\n\t\t}\n\t}\n\n\tprivate _recalculateSize() {\n\t\tif (this._chartContainer) {\n\t\t\tconst div: HTMLDivElement = this._chartContainer.nativeElement;\n\t\t\tconst height = Math.max(div.clientWidth / (this.ratio || 2), 240);\n\t\t\tdiv.style.height = `${height}px`;\n\t\t\tif (this._chart) {\n\t\t\t\tthis._chart.resize();\n\t\t\t\tif (this._echartsOptions.legend) {\n\t\t\t\t\tconst opt: any = this._chart.getOption();\n\t\t\t\t\tif (div.clientWidth  ({\n\t\t\tname: v.name || _.isString(v.label) ? v.label : '',\n\t\t\ttype: this._typeMap[v.type || mainType] || v.type || mainType,\n\t\t\tdata: (v.data || ([] as any[])).map(d => this._mapDataItem(d, this.timeFormat))\n\t\t}));\n\t\tconst isTime = series.some(s => s.data.some(d => d.name && moment(d.name).isValid()));\n\t\tconst labels = this.labels || [];\n\t\tconst timeAxis = [\n\t\t\t{\n\t\t\t\ttype: 'time'\n\t\t\t}\n\t\t];\n\t\tconst catAxis: Array = [\n\t\t\t{ data: labels, type: 'category' }\n\t\t];\n\t\tconst valAxis: Array = [{ type: 'value' }];\n\t\tconst tooltip: any = {\n\t\t\taxisPointer: {\n\t\t\t\ttype: 'shadow'\n\t\t\t}\n\t\t};\n\t\ttooltip.formatter = this._formatTooltip.bind(this, this.currency, this.percentage, this.digits);\n\t\tif (this.currency) {\n\t\t\tvalAxis[0].axisLabel = { formatter: value => formatScale(value, this.currency) };\n\t\t}\n\t\tthis._echartsOptions = {\n\t\t\tseries,\n\t\t\ttooltip\n\t\t};\n\n\t\tif (mainType === 'horizontalBar') {\n\t\t\tthis._echartsOptions.yAxis = catAxis as echarts.EChartOption.YAxis[];\n\t\t\tthis._echartsOptions.xAxis = valAxis as echarts.EChartOption.XAxis[];\n\t\t\tthis._echartsOptions.tooltip['trigger'] = 'axis';\n\t\t} else if (mainType === 'line' || mainType === 'bar') {\n\t\t\tthis._echartsOptions.xAxis = (isTime ? timeAxis : catAxis) as echarts.EChartOption.XAxis[];\n\t\t\tthis._echartsOptions.yAxis = valAxis as echarts.EChartOption.YAxis[];\n\t\t\tthis._echartsOptions.tooltip['trigger'] = 'axis';\n\t\t} else if (this._typeMap[mainType] === 'pie') {\n\t\t\tthis._definePieShape(series, labels, mainType === 'doughnut');\n\t\t}\n\n\t\tif (this.legend !== false) {\n\t\t\tthis._echartsOptions.legend = this._generateLegendOptions(\n\t\t\t\tseries.length > 1,\n\t\t\t\tthis._typeMap[mainType] === 'pie'\n\t\t\t);\n\t\t}\n\n\t\tthis._defineColors(series, this._typeMap[mainType] === 'pie');\n\n\t\tlet opt = _.cloneDeep(this._echartsOptions);\n\t\topt = _.merge(opt, this.options);\n\n\t\tthis._chart.setOption(opt, true);\n\t}\n\n\tprivate _mapDataItem(item: any, timeFormat: string): any {\n\t\tif (_.isNumber(item)) {\n\t\t\treturn { value: item };\n\t\t}\n\t\tif (!item) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (item.x && moment(item.x).isValid() && _.isNumber(item.y)) {\n\t\t\tconst m = moment(item.x);\n\t\t\treturn {\n\t\t\t\tname: moment(item.x).format(timeFormat || 'L'),\n\t\t\t\tvalue: [`${m.get('year')}-${m.get('month')}-${m.get('day')}`, item.y]\n\t\t\t};\n\t\t}\n\t\treturn item;\n\t}\n\n\tprivate _definePieShape(series: any[], labels: string[], makeDoughnut: boolean) {\n\t\tlet r = 0;\n\t\tlet step = 80;\n\t\tif (makeDoughnut) {\n\t\t\tr = 40;\n\t\t}\n\t\tstep = (80 - r) / series.length;\n\t\tseries.forEach(s => {\n\t\t\ts.data.forEach((d, i) => (d.name = labels[i]));\n\t\t\ts.radius = [`${r}%`, `${r + step - 1}%`];\n\t\t\tr = r + step;\n\t\t\ts.label = {\n\t\t\t\tnormal: {\n\t\t\t\t\tshow: false,\n\t\t\t\t\tposition: 'center'\n\t\t\t\t},\n\t\t\t\temphasis: {\n\t\t\t\t\tshow: makeDoughnut ? true : false,\n\t\t\t\t\ttextShadowColor: 'grey',\n\t\t\t\t\ttextShadowOffsetY: 1\n\t\t\t\t}\n\t\t\t};\n\t\t\ts['avoidLabelOverlap'] = false;\n\t\t});\n\t}\n\n\tprivate _defineColors(series: any[], pieLike: boolean) {\n\t\tlet cf = this.colorsFor || 'auto';\n\t\tif (cf === 'auto') {\n\t\t\tif (pieLike) {\n\t\t\t\tcf = 'data';\n\t\t\t} else {\n\t\t\t\tcf = 'series';\n\t\t\t}\n\t\t}\n\t\tif (cf === 'series') {\n\t\t\tconst colors = generateColorsAsStrings(this.colors || [], series.length);\n\t\t\tseries.forEach((s, i) => (s['color'] = colors[i]));\n\t\t} else if (cf === 'data') {\n\t\t\tseries.forEach(s => {\n\t\t\t\tconst colors = generateColorsAsStrings(this.colors || [], s.data.length);\n\t\t\t\ts.data.forEach((d, i) => (d.itemStyle = { color: colors[i] }));\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate _formatTooltip(currencyCode: string, percent: ShowPercentageType, digitInfo: string, param: any) {\n\t\tconst formatParam = p => {\n\t\t\tlet l = `\n\t\t\t ${p.seriesName}: `;\n\t\t\tconst percentOnly: boolean = percent === 'only' && p.percent;\n\t\t\tconst showPercent: boolean = percent && p.percent;\n\t\t\tconst v = _.isArray(p.data.value) ? p.data.value[1] : p.data.value;\n\n\t\t\tif (!percentOnly) {\n\t\t\t\tif (currencyCode) {\n\t\t\t\t\tl += formatMoney(v, currencyCode, digitInfo);\n\t\t\t\t} else {\n\t\t\t\t\tl += new DecimalPipe(moment.locale()).transform(v, digitInfo);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (showPercent) {\n\t\t\t\tl += ` ${p.percent}%`;\n\t\t\t}\n\t\t\tl += '';\n\t\t\treturn l;\n\t\t};\n\n\t\tlet str = '';\n\t\tif (_.isArray(param)) {\n\t\t\tstr += `${param[0].name}`;\n\t\t\tstr += `${param.map(p => formatParam(p)).join('')}`;\n\t\t} else {\n\t\t\tstr += `${param.name}`;\n\t\t\tstr += `${formatParam(param)}`;\n\t\t}\n\t\treturn str + '';\n\t}\n\n\tprivate _generateLegendOptions(multiSeries: boolean, pieLike: boolean): any {\n\t\tconst l = this.legend || 'auto';\n\t\tif ((l === 'auto' && (multiSeries || pieLike)) || _.isString(this.legend)) {\n\t\t\tconst legend: any = {};\n\t\t\tif (l === 'auto' && pieLike) {\n\t\t\t\tlegend.x = 'left';\n\t\t\t}\n\t\t\tif (['left', 'right', 'top', 'bottom'].indexOf(l as string) >= 0) {\n\t\t\t\tlegend.x = l;\n\t\t\t}\n\t\t\tif (legend.x === 'left' || legend.x === 'right') {\n\t\t\t\tlegend.orient = 'vertical';\n\t\t\t}\n\t\t\treturn legend;\n\t\t} else if (_.isObject(this.legend)) {\n\t\t\treturn this.legend;\n\t\t}\n\t}\n}\n\n    \n\n\n    \n            \n\t\t\t.ezy-echart-series-indicator {\n\t\t\t\tdisplay: inline-block;\n\t\t\t\tborder-radius: 10px;\n\t\t\t\tborder-width: 1px;\n\t\t\t\tborder-style: solid;\n\t\t\t\tborder-color: white;\n\t\t\t\twidth: 10px;\n\t\t\t\theight: 10px;\n\t\t\t}\n\t\t\t.ezy-echart-tooltip-item {\n\t\t\t\ttext-indent: -13px;\n\t\t\t\tpadding-left: 13px;\n\t\t\t}\n\t\t\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t'\n    var COMPONENTS = [{'name': 'ChartComponent', 'selector': 'ezy-chart'},{'name': 'EChartComponent', 'selector': 'ezy-echart'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EChartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChange Log\nAll notable changes to this project will be documented in this file. See standard-version for commit guidelines.\n\n0.3.0 (2018-12-13)\nFeatures\n\nchange default tootlip mode to 'index' for line charts (aee730e)\nsplit labels in multi-series pie/doughnut charts (6d64f8c)\n\n\n0.2.3 (2018-08-24)\nBug Fixes\n\nchart refreshed on scrolling the page (3be30b6)\n\n\n0.2.2 (2018-07-19)\nFeatures\n\nadd per chart plugins (78cb623)\n\n\n0.2.1 (2018-06-26)\nFeatures\n\ntooltips: render labels of a dataset in a single line (87c3bba)\n\n\n0.2.0 (2018-06-22)\nFeatures\n\nupgrade Angular to 6 (b3d2575)\n\nBREAKING CHANGES\n\nuse version 0.1.x for Angular 5\n\n\n0.1.2 (2018-06-22)\nBug Fixes\n\nbuild error on demo app (ce9fae3)\nlabels auto hidden even if it's not set to 'auto' (955be2a)\n\n\n0.1.1 (2018-04-16)\nBug Fixes\n\ncharts with legend not rendered properly on small screens (931eb7c)\n\nFeatures\n\nmake all imports on underlying chart libraries optional (6ed3c5d)\n\n\n0.1.0 (2018-04-15)\nFeatures\n\nadd support for echarts (experimental) (d6f5bc5)\n\n\n0.0.9 (2018-03-21)\nFeatures\n\nimprove support for radar charts (034b5a3)\n\n\n0.0.8 (2018-03-20)\nBug Fixes\n\nlegend cannot be turned off (a1f10c6)\n\n\n0.0.7 (2018-03-20)\nFeatures\n\nsplit tooltip title & label to avoid tooltips being too wide (096295b)\n\n\n0.0.6 (2018-03-15)\nBug Fixes\n\ncompile error (4ead39d)\n\nFeatures\n\nadd ability to customise default colors (389b678)\n\n\n0.0.5 (2018-01-12)\nBug Fixes\n\na null pointer when null values are provided a long with a currency code (144122c)\n\nFeatures\n\nadd support for digit info (2d7cd01)\nupgrade libraries (5c519cc)\n\n\n0.0.4 (2017-12-05)\nBug Fixes\n\ndetect binding input changes (33daa46)\nincorrect default chart type (77edf2f)\n\nFeatures\n\nchange cursor type on hovering legend boxes (13a2fc5)\nincrease min chart size (for auto display legend) to 120x120 (7c88f18)\nonly recreate on resize if legend is automatic (a1278fd)\n\n\n0.0.3 (2017-11-27)\nBug Fixes\n\ndemo outputs warning messages when changing to timescale (a6ead79)\nmodule import issue in Angular 5 (a8a62f9)\n\nPerformance Improvements\n\nfine tune update interval (f5ca0e5)\n\n\n0.0.2 (2017-11-27)\nBug Fixes\n\ncorrect build script (12765f1)\nincorrect color generation code (1e1f684)\nremove chore: from commit messages (3195ac5)\n\n\n0.0.1 (2017-11-22)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Peer dependencies\n    \n    \n        \n            @angular/core : >=6.0.0 \n        \n            chart.js : >=2.7.1 \n        \n            echarts : >=4.0.0 \n        \n            lodash : >=4.17.4 \n        \n            moment : >=2.18.0 \n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            splitWords   (src/.../chart.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/chart.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            splitWords\n                            \n                            \n                        \n                    \n                \n                \n                    \nsplitWords(text, maxLength)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        text\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        maxLength\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAngular components based on Chart.js\n\n\n\n\n\n\n\nDemo\nhttps://ztan.github.io/ezy-chart/\nTable of contents\n\nAbout\nInstallation\nDocumentation\nDevelopment\nLicense\n\nAbout\nAngular components based on Chart.js and ECharts\nInstallation\nInstall through npm:\nnpm install --save ezy-chartThen include in your apps module:\nimport { NgModule } from '@angular/core';\nimport { ChartsModule } from 'ezy-chart';\n\n@NgModule({\n  imports: [\n    ChartsModule\n  ]\n})\nexport class MyModule {}Finally use in one of your apps components:\nimport { Component } from '@angular/core';\n\n@Component({\n  template: ''\n})\nexport class MyComponent {\n    chartDatasets: Chart.ChartDataSets[] = [{ data: [12, 19, 3, 5, 2, 3], label: 'series 1' }];\n}You may also find it useful to view the demo source.\nUsage without a module bundler\n\n\n    // everything is exported ezyChart namespace\nDocumentation\nAll documentation is auto-generated from the source via compodoc and can be viewed here:\nhttps://ztan.github.io/ezy-chart/docs/\nDevelopment\nPrepare your environment\n\nInstall Node.js and yarn\nInstall local dev dependencies: yarn while current directory is this repo\n\nDevelopment server\nRun yarn start to start a development server on port 8000 with auto reload + tests.\nTesting\nRun yarn test to run tests once or yarn run test:watch to continually run tests.\nRelease\n\nBump the version in package.json (once the module hits 1.0 this will become automatic)yarn run release\n\nLicense\nMIT\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nThe MIT License (MIT)\nCopyright (c) 2017 Zhendong Tan\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ChartsModule\n                    \n                    \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n\n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ColorsForType   (src/.../base.chart.ts)\n                        \n                        \n                            LegendType   (src/.../base.chart.ts)\n                        \n                        \n                            ShowPercentageType   (src/.../base.chart.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/base.chart.ts\n    \n        \n            \n                \n                    \n                        \n                        ColorsForType\n                    \n                \n                \n                    \n                        ColorsForType:     \"auto\" | \"series\" | \"data\" | \"none\"\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        LegendType\n                    \n                \n                \n                    \n                        LegendType:     Chart.ChartLegendOptions | \"auto\" | boolean | Chart.PositionType\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        ShowPercentageType\n                    \n                \n                \n                    \n                        ShowPercentageType:     boolean | \"only\"\n\n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Chart   (src/.../chart.component.ts)\n                        \n                        \n                            CHART_DEFAULT_COLORS   (src/.../charts.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/chart.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Chart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        Chart:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/charts.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CHART_DEFAULT_COLORS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        CHART_DEFAULT_COLORS:     InjectionToken\n\n                    \n                \n                    \n                        \n                            Type :     InjectionToken\n\n                        \n                    \n                    \n                        \n                            Default value : new InjectionToken(\n\t'ezy-chart-default-colours'\n)\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
